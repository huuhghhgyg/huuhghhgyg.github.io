<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>安装 on Hikaru&#39;s Blog</title>
    <link>http://localhost:1313/tags/%E5%AE%89%E8%A3%85/</link>
    <description>Recent content in 安装 on Hikaru&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 23 Jan 2021 17:34:33 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E5%AE%89%E8%A3%85/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>初探Docker</title>
      <link>http://localhost:1313/posts/docker-startup/</link>
      <pubDate>Sat, 23 Jan 2021 17:34:33 +0000</pubDate>
      <guid>http://localhost:1313/posts/docker-startup/</guid>
      <description>&lt;p&gt;尝试了 docker 的一些常用操作&lt;/p&gt;&#xA;&lt;h1 id=&#34;查看正在运行的容器&#34;&gt;查看正在运行的容器&lt;/h1&gt;&#xA;&lt;h2 id=&#34;查看正在运行的容器-1&#34;&gt;查看正在运行的容器&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;docker ps&lt;/code&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;如果 docker 没有运行，则会显示错误&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;查看所有容器&#34;&gt;查看所有容器&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;docker ps -a&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;建立容器&#34;&gt;建立容器&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;docker run ubuntu -it&lt;/code&gt;&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;参数&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;作用&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;-i&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;与容器互动(类似 ssh，可以输入指令)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;-t&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;创造一个终端&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;容器常用操作&#34;&gt;容器常用操作&lt;/h1&gt;&#xA;&lt;h2 id=&#34;本地容器操作容器&#34;&gt;本地容器操作容器：&lt;/h2&gt;&#xA;&lt;p&gt;运行但不进入：&#xA;&lt;code&gt;docker start [容器ID/容器ID开头的几个字]&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;进入容器：&#xA;&lt;code&gt;docker attach [容器ID/容器ID开头的几个字]&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;离开容器:&#xA;&lt;kbd&gt;Ctrl+P&lt;/kbd&gt; &lt;kbd&gt;Ctrl+Q&lt;/kbd&gt;&lt;/p&gt;&#xA;&lt;p&gt;停止容器：&#xA;&lt;code&gt;docker stop [容器ID/容器ID开头的几个字]&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;查看已经下载到本地的容器：&#xA;&lt;code&gt;docker image ls &lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;移除本地容器：&#xA;&lt;code&gt;docker rm [容器名称]&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;移除本地镜像：&#xA;&lt;code&gt;docker rmi [镜像名称]&lt;/code&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;镜像名称在 REPOSITORY 下&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;新建容器&#34;&gt;新建容器&lt;/h2&gt;&#xA;&lt;p&gt;搜索镜像从 &lt;a href=&#34;https://hub.docker.com&#34;&gt;Docker Hub&lt;/a&gt; 下载&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;docker run (参数) [容器名称]&lt;/code&gt;&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;参数&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;作用&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;--name [name]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;更改容器名称&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;-d&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;运行成 Detached 模式&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;-p [端口]:[容器端口]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;端口映射&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;-v [路径]:[容器路径]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;文件映射。将电脑的文件映射入容器&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;第一次使用的镜像会自动从 Docker Hub 下载&lt;/p&gt;</description>
    </item>
    <item>
      <title>树莓派安装设置</title>
      <link>http://localhost:1313/posts/raspi-setup/</link>
      <pubDate>Wed, 20 Jan 2021 10:02:05 +0000</pubDate>
      <guid>http://localhost:1313/posts/raspi-setup/</guid>
      <description>&lt;p&gt;重新刷入系统进行各项设置安装&lt;/p&gt;&#xA;&lt;h1 id=&#34;系统下载安装&#34;&gt;系统下载安装&lt;/h1&gt;&#xA;&lt;p&gt;有3个系统可以选择&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.raspberrypi.org/software/operating-systems/&#34;&gt;Raspbian&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://ubuntu.com/download/raspberry-pi&#34;&gt;Ubuntu&lt;/a&gt;：默认账号ubuntu，密码ubuntu，进入后会要求修改密码&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://gitee.com/openfans-community/Debian-Pi-Aarch64&#34;&gt;OPENFANS Raspbian&lt;/a&gt;：一个由Debian重新构建的系统&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;软件源&#34;&gt;软件源&lt;/h1&gt;&#xA;&lt;h2 id=&#34;修改apt软件源&#34;&gt;修改apt软件源&lt;/h2&gt;&#xA;&lt;p&gt;备份软件源后对其进行修改&#xA;&lt;code&gt;sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;在这里使用清华tuna源&#xA;在 ARM(arm64, armhf)、PowerPC(ppc64el)、RISC-V(riscv64) 和 S390x 等架构的设备上（对应官方源为ports.ubuntu.com）使用 ubuntu-ports 镜像。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 2&lt;/span&gt;&lt;span&gt;deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal main restricted universe multiverse&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 3&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal main restricted universe multiverse&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 4&lt;/span&gt;&lt;span&gt;deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-updates main restricted universe multiverse&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 5&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-updates main restricted universe multiverse&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 6&lt;/span&gt;&lt;span&gt;deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-backports main restricted universe multiverse&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 7&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-backports main restricted universe multiverse&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 8&lt;/span&gt;&lt;span&gt;deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-security main restricted universe multiverse&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 9&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-security main restricted universe multiverse&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;10&lt;/span&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;11&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;# 预发布软件源，不建议启用&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;12&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-proposed main restricted universe multiverse&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;13&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-proposed main restricted universe multiverse&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;修改pippip3源&#34;&gt;修改pip/pip3源&lt;/h2&gt;&#xA;&lt;p&gt;这里发现清华源好像就不太好用了，下载安装的时候我看都用的是阿里的源。但是可以先配置上：&#xA;1.创建&lt;code&gt;.pip&lt;/code&gt;文件夹&lt;/p&gt;</description>
    </item>
    <item>
      <title>更快地部署Office</title>
      <link>http://localhost:1313/posts/deploy-office-faster/</link>
      <pubDate>Sat, 25 May 2019 18:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/deploy-office-faster/</guid>
      <description>&lt;p&gt;每次新安装Office诚然是一件很头疼地事情。这里介绍可以快速在电脑上安装Office的方法。&lt;/p&gt;&#xA;&lt;h1 id=&#34;office-tool-plus&#34;&gt;Office Tool Plus&lt;/h1&gt;&#xA;&lt;p&gt;如果你想深入了解Office Tool Plus，也请访问&lt;a href=&#34;https://otp.landian.vip/zh-cn/&#34;&gt;官方网站&lt;/a&gt;。&#xA;&lt;img src=&#34;OfficeToolSite.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;打开网站以后，点击&lt;strong&gt;立即下载&lt;/strong&gt;，并打开&lt;strong&gt;Office Tool Plus&lt;/strong&gt;。打开以后可能会进行自动更新。更新完之后进入软件界面&#xA;&lt;img src=&#34;DeployOffice_1.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;个人快速安装office&#34;&gt;个人快速安装Office&lt;/h1&gt;&#xA;&lt;p&gt;如果仅在一台电脑上安装，你可以直接转到&lt;code&gt;安装&lt;/code&gt;选项卡进行安装。&#xA;&lt;img src=&#34;DeployOffice_2.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;1、选择你需要的Office套件。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Win10推荐使用Office2019，Win7推荐使用Office2016&#xA;建议安装零售版，即&lt;strong&gt;Retail&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;DeployOffice_3.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;2、根据你需要的Office软件勾选应用程序。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;完整版Office安装的项目为&lt;strong&gt;Excel Powerpoint Word Access Publisher&lt;/strong&gt;。大学生建议勾选完整版Office的安装项目。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;DeployOffice_4.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;3、安装设置:&#xA;根据系统，设置&lt;code&gt;体系结构&lt;/code&gt;。为了获取较新的Office版本，建议把&lt;code&gt;通道&lt;/code&gt;设置为&amp;quot;每月通道&amp;quot;。&lt;code&gt;安装方式&lt;/code&gt;无需更改。&#xA;&lt;img src=&#34;DeployOffice_5.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;设置&lt;code&gt;可选设置&lt;/code&gt;下的&lt;code&gt;更新设置&lt;/code&gt;。&#xA;&lt;img src=&#34;DeployOffice_6.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;注意其中的&lt;strong&gt;禁用Office更新&lt;/strong&gt;和&lt;strong&gt;使用配置管理器管理更新&lt;/strong&gt;，建议取消勾选。&#xA;&lt;img src=&#34;DeployOffice_7.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;更新通道&lt;/code&gt;建议更改为&amp;quot;每月通道&amp;quot;&#xA;&lt;img src=&#34;DeployOffice_8.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;激活设置&lt;/code&gt;中，按需要进行勾选。&#xA;&lt;img src=&#34;DeployOffice_9.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;4、以上设置完毕后，即可点击&lt;strong&gt;开始安装&lt;/strong&gt;。等待安装完毕即可使用。&lt;/p&gt;&#xA;&lt;h1 id=&#34;批量快速安装office&#34;&gt;批量快速安装Office&lt;/h1&gt;&#xA;&lt;p&gt;这种情况适用于多台设备需要安装Office。首先需要在一台机器上完成配置设置。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;转到&lt;code&gt;下载&lt;/code&gt;选项卡。点击&lt;code&gt;版本号&lt;/code&gt;,&lt;code&gt;查询版本号&lt;/code&gt;。&#xA;&lt;img src=&#34;DeployOffice_10.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;设置&lt;code&gt;常规设置&lt;/code&gt;中的&lt;code&gt;通道&lt;/code&gt;、&lt;code&gt;体系结构&lt;/code&gt;以及&lt;code&gt;版本&lt;/code&gt;。&#xA;&lt;img src=&#34;DeployOffice_11.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;点击上方的&lt;strong&gt;开始&lt;/strong&gt;按钮。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;下载完成后，转到&lt;code&gt;安装&lt;/code&gt;选项卡，参照上文&lt;strong&gt;个人快速安装Office&lt;/strong&gt;的前三个步骤。不同的是，&lt;code&gt;安装设置&lt;/code&gt;中的&lt;code&gt;安装方式&lt;/code&gt;应设置为&lt;strong&gt;离线安装&lt;/strong&gt;。&#xA;&lt;img src=&#34;DeployOffice_12.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;点击开始安装旁边的三角形，选择&lt;strong&gt;保存配置为XML&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;找到并打开你保存的XML文件，转到其中&lt;code&gt;SourcePath&lt;/code&gt;所指的目录，复制整个文件夹到你的U盘。&#xA;&lt;img src=&#34;DeployOffice_13.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;把你保存的XML文件也复制到U盘下的同一个文件夹。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;当你需要在其他电脑上从U盘安装Office时，修改其中&lt;code&gt;SourcePath&lt;/code&gt;所指的目录为你的U盘所在的同文件夹目录，打开&lt;strong&gt;Office Tool Plus&lt;/strong&gt;，进入&lt;code&gt;安装&lt;/code&gt;选项卡，点击开始安装旁边的三角形，选择&lt;strong&gt;选择XML文件&lt;/strong&gt;，选择你的XML文件，点击&lt;strong&gt;开始安装&lt;/strong&gt;。或者使用微软的&lt;strong&gt;Office Deployment Tool&lt;/strong&gt;，用CMD的方式进行安装。这里不再介绍这种方法，请百度。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>GPT分区是啥？</title>
      <link>http://localhost:1313/posts/gpt-partition/</link>
      <pubDate>Sat, 07 Apr 2018 13:01:03 +0000</pubDate>
      <guid>http://localhost:1313/posts/gpt-partition/</guid>
      <description>&lt;p&gt;UEFI  BIOS可以说是legacy  BIOS的继承者，也就是传统BIOS的后代。以后的主流模式。&lt;/p&gt;&#xA;&lt;h1 id=&#34;gpt&#34;&gt;GPT&lt;/h1&gt;&#xA;&lt;h2 id=&#34;mbr与gpt的区别&#34;&gt;MBR与GPT的区别&lt;/h2&gt;&#xA;&lt;p&gt;传统的MBR最大支持2TB的单分区，最多能设置4个主分区;GPT支持2TB以上的单分区，理论上能设置128个主分区（硬盘的4k对齐与GPT无关联，AHCI和GPT无关联）&lt;/p&gt;&#xA;&lt;p&gt;MBR分区表：Master Boot Record，即硬盘主引导记录分区表，只支持容量在 2.1TB 以下的硬盘，超过2.1TB的硬盘只能管理2.1TB，最多只支持4个主分区或三个主分区和一个扩展分区，扩展分区下可以有多个逻辑分区。&#xA;GPT分区表：GPT，全局唯一标识分区表(GUID Partition Table)，与MBR最大4个分区表项的限制相比，GPT对分区数量没有限制，但Windows最大仅支持128个GPT分区，GPT可管理硬盘大小达到了18EB。只有基于UEFI平台的主板才支持GPT 分区引导启动。&lt;/p&gt;&#xA;&lt;h3 id=&#34;gpt-esp&#34;&gt;GPT-ESP&lt;/h3&gt;&#xA;&lt;p&gt;ESP分区：EFI system partition，该分区用于采用了EFI BIOS的电脑系统，用来启动操作系统。分区内存放引导管理程序、驱动程序、系统维护工具等。如果电脑采用了EFI系统，或当前磁盘用于在EFI平台上启动操作系统，则应建议ESP分区。如果只是作为仓库盘，就没必要设置这个分区了。&lt;/p&gt;&#xA;&lt;h3 id=&#34;gpt-msr&#34;&gt;GPT-MSR&lt;/h3&gt;&#xA;&lt;p&gt;ESP分区：EFI system partition，该分区用于采用了EFI BIOS的电脑系统，用来启动操作系统。分区内存放引导管理程序、驱动程序、系统维护工具等。如果电脑采用了EFI系统，或当前磁盘用于在EFI平台上启动操作系统，则应建议ESP分区。如果只是作为仓库盘，也同样没必要设置这个分区。&lt;/p&gt;&#xA;&lt;h3 id=&#34;secure-bootwindows8&#34;&gt;SECURE BOOT(Windows8+)&lt;/h3&gt;&#xA;&lt;p&gt;SECURE BOOT功能:Windows 8中增加了一个新的安全功能,Secure Boot内置于UEFI BIOS中,用来对抗感染MBR、BIOS的恶意软件,  Windows 8 缺省将使用Secure Boot,在启动过程中，任何要加载的模块必须签名(强制的)，UEFI固件会进行验证， 没有签名或者无法验证的，将不会加载。&lt;/p&gt;&#xA;&lt;h1 id=&#34;uefi&#34;&gt;UEFI&lt;/h1&gt;&#xA;&lt;p&gt;UEFI全称“统一的可扩展固件接口”(Unified Extensible Firmware Interface)， 是一种详细描述类型接口的标准。这种接口用于操作系统自动从预启动的操作环境，加载到一种操作系统上。&lt;/p&gt;&#xA;&lt;h2 id=&#34;uefi的优点&#34;&gt;UEFI的优点&lt;/h2&gt;&#xA;&lt;p&gt;　　1.纠错特性：与BIOS显著不同的是，UEFI是用模块化、C语言风格的参数堆栈传递方式、动态链接的形式构建系统，它比BIOS更易于实现，容错和纠错特性也更强，从而缩短了系统研发的时间。更加重要的是，它运行于32位或64位模式，突破了传统16位代码的寻址能力，达到处理器的最大寻址，此举克服了BIOS代码运行缓慢的弊端。&lt;/p&gt;&#xA;&lt;p&gt;　　2.兼容性：与BIOS不同的是，UEFI体系的驱动并不是由直接运行在CPU上的代码组成的，而是用EFI Byte Code(EFI字节代码)编写而成的。Java是以“Byte Code”形式存在的，正是这种没有一步到位的中间性机制，使Java可以在多种平台上运行。UEFI也借鉴了类似的做法。EFI Byte Code是一组用于UEFI驱动的虚拟机器指令，必须在UEFI驱动运行环境下被解释运行，由此保证了充分的向下兼容性。&lt;/p&gt;&#xA;&lt;p&gt;　　3.鼠标操作：UEFI内置图形驱动功能，可以提供一个高分辨率的彩色图形环境，用户进入后能用鼠标点击调整配置，一切就像操作Windows系统下的应用软件一样简单。&lt;/p&gt;&#xA;&lt;p&gt;　　4.强大的可扩展性：UEFI将使用模块化设计，它在逻辑上分为硬件控制与OS(操作系统)软件管理两部分，硬件控制为所有UEFI版本所共有，而OS软件管理其实是一个可编程的开放接口。借助这个接口，主板厂商可以实现各种丰富的功能。比如我们熟悉的各种备份及诊断功能可通过UEFI加以实现，主板或固件厂商可以将它们作为自身产品的一大卖点。UEFI也提供了强大的联网功能，其他用户可以对你的主机进行可靠的远程故障诊断，而这一切并不需要进入操作系统。&lt;/p&gt;&#xA;&lt;p&gt;　　5.图形界面：目前UEFI主要由这几部分构成：UEFI初始化模块、UEFI驱动执行环境、UEFI驱动程序、兼容性支持模块、UEFI高层应用和GUID磁盘分区组成。&lt;/p&gt;&#xA;&lt;h1 id=&#34;在什么情况下能使用uefigpt模式来装系统呢&#34;&gt;在什么情况下能使用UEFI+GPT模式来装系统呢？&lt;/h1&gt;&#xA;&lt;p&gt;win7/8 64位系统+UEFI才能在GPT中引导哦。但是现在使用传统legacy+MBR模式装系统的，还是比较多的。&lt;/p&gt;&#xA;&lt;h1 id=&#34;ahci&#34;&gt;AHCI&lt;/h1&gt;&#xA;&lt;p&gt;AHCI（Serial ATA Advanced Host Controller Interface）串行ATA高级主控接口/高级主机控制器接口），是在Intel的指导下，由多家公司联合研发的接口标准，它允许存储驱动程序启用高级串行 ATA 功能，&lt;/p&gt;&#xA;&lt;p&gt;AHCI本质是一种PCI类设备，在系统内存总线和串行ATA设备内部逻辑之间扮演一种通用接口的角色（即它在不同的操作系统和硬件中是通用的）。这类设备描述了一个含控制和状态区域、命令序列入口表的通用系统内存结构；每个命令表入口包含SATA设备编程信息，和一个指向（用于在设备和主机传输数据的）描述表的指针。&#xA;AHCI通过包含一个PCI BAR（基址寄存器），来实现原生SATA功能。由于AHCI统一接口的研发成功，使得支持串行ATA产品的开发工作大为简化，操作系统和设备制造商省去了单独开发接口的工作，取而代之的是直接在统一接口上进行操作，可以实现包括NCQ（Native Command Queuing）在内的诸多功能。&#xA;AHCI模式则与IDE模式相反，装系统时需要安装SATA驱动（而且貌似只有这个模式能打开NCQ功能）。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
