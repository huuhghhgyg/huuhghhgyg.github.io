<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>编程 on Hikaru&#39;s Blog</title>
    <link>http://localhost:1313/tags/%E7%BC%96%E7%A8%8B/</link>
    <description>Recent content in 编程 on Hikaru&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 09 Dec 2024 11:42:28 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E7%BC%96%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>梯度下降</title>
      <link>http://localhost:1313/posts/gradient-descent/</link>
      <pubDate>Mon, 09 Dec 2024 11:42:28 +0800</pubDate>
      <guid>http://localhost:1313/posts/gradient-descent/</guid>
      <description>&lt;h1 id=&#34;梯度下降的过程&#34;&gt;梯度下降的过程&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;挑选一个初始值 $w_0$&lt;/li&gt;&#xA;&lt;li&gt;重复迭代参数 $w_{t+1}=w_t-\eta \frac {\partial L(w_t)}{\partial w_t}$，其中：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$w_t$ 是第 t 次迭代的参数&lt;/li&gt;&#xA;&lt;li&gt;$\eta$ 是学习率&lt;/li&gt;&#xA;&lt;li&gt;$\frac {\partial L(w_t)}{\partial w_t}$ 是损失函数 $L(w)$ 对参数 $w$ 的梯度&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;沿梯度方向将增加损失函数值，因此需要取负梯度方向，即变化量为 $-\eta \frac {\partial L(w_t)}{\partial w_t}$&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;学习率 $\eta$：步长的超参数。&lt;/p&gt;&#xA;&lt;h1 id=&#34;示例&#34;&gt;示例&lt;/h1&gt;&#xA;&lt;h2 id=&#34;优化-x&#34;&gt;优化 x²&lt;/h2&gt;&#xA;&lt;p&gt;💡 以函数求极值的视角来看&lt;/p&gt;&#xA;&lt;p&gt;假设损失函数为 $L(w)=w^2$，则 $\frac {\partial L(w)}{\partial w}=2w$。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;初始值 $w_0=5$&lt;/li&gt;&#xA;&lt;li&gt;学习率 $\eta=0.2$&lt;/li&gt;&#xA;&lt;li&gt;迭代次数 5 次&lt;/li&gt;&#xA;&lt;li&gt;求解 $w_5$&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;这里还默认设置了一个停止条件，即当 $|w_{t+1}-w_t|&amp;lt;0.01$ 时认为已经收敛，停止迭代。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;gd&lt;/span&gt;(w, lr):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;2&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#cba6f7&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#89dceb&#34;&gt;abs&lt;/span&gt;(w &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;-&lt;/span&gt; lr &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#fab387&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;*&lt;/span&gt; w) &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#fab387&#34;&gt;0.01&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;3&lt;/span&gt;&lt;span&gt;        w &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;=&lt;/span&gt; w &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;-&lt;/span&gt; lr &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#fab387&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;*&lt;/span&gt; w&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;4&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#89dceb&#34;&gt;print&lt;/span&gt;(w)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;5&lt;/span&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;6&lt;/span&gt;&lt;span&gt;gd(&lt;span style=&#34;color:#fab387&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#fab387&#34;&gt;0.2&lt;/span&gt;)  &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;# 初始值 5，学习率 0.2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 1&lt;/span&gt;&lt;span&gt;3.0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 2&lt;/span&gt;&lt;span&gt;1.7999999999999998&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 3&lt;/span&gt;&lt;span&gt;1.0799999999999998&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 4&lt;/span&gt;&lt;span&gt;0.6479999999999999&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 5&lt;/span&gt;&lt;span&gt;0.3887999999999999&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 6&lt;/span&gt;&lt;span&gt;0.23327999999999993&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 7&lt;/span&gt;&lt;span&gt;...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 8&lt;/span&gt;&lt;span&gt;0.0005077997833420796&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 9&lt;/span&gt;&lt;span&gt;0.0003046798700052478&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;10&lt;/span&gt;&lt;span&gt;0.00018280792200314866&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;11&lt;/span&gt;&lt;span&gt;0.0001096847532018892&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;yaxb-拟合&#34;&gt;y=ax+b 拟合&lt;/h2&gt;&#xA;&lt;p&gt;📄&lt;a href=&#34;gd_test.ipynb&#34;&gt;代码附件&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>MicroCity内置的LUA函数</title>
      <link>http://localhost:1313/posts/lua-microcity/</link>
      <pubDate>Fri, 23 Sep 2022 16:20:36 +0000</pubDate>
      <guid>http://localhost:1313/posts/lua-microcity/</guid>
      <description>&lt;p&gt;物流信息管理课程MicroCity学习笔记&lt;/p&gt;&#xA;&lt;h1 id=&#34;lua的小特性集合&#34;&gt;Lua的小特性：集合&lt;/h1&gt;&#xA;&lt;p&gt;虽然Lua里面把它自己的数组称作&lt;code&gt;table&lt;/code&gt;，但是我认为这个数据结构更类似于Python的集合或者json，里面可以存储任何东西，不受结构约束。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;collection &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;=&lt;/span&gt; {{&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#fab387&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#fab387&#34;&gt;2&lt;/span&gt;}, &lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;abc&amp;#34;&lt;/span&gt;, {&lt;span style=&#34;color:#fab387&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#fab387&#34;&gt;3&lt;/span&gt;}}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果需要查询数组的长度，只需要在数组名前面添加&lt;code&gt;#&lt;/code&gt;即可得到&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;list &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#fab387&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#fab387&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#fab387&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#fab387&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#fab387&#34;&gt;5&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;2&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;for&lt;/span&gt; i&lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#fab387&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;#&lt;/span&gt;list &lt;span style=&#34;color:#cba6f7&#34;&gt;do&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;3&lt;/span&gt;&lt;span&gt;    print(list[i])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;4&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Lua的数组（集合）下标从&lt;code&gt;1&lt;/code&gt;开始，不同于C类语言的&lt;code&gt;0&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;microcity的内置函数&#34;&gt;MicroCity的内置函数&lt;/h1&gt;&#xA;&lt;p&gt;为什么要写这个？因为MicroCity自带的编辑器相比较于“现代”的编辑器来说还是不够好用（如VSCode等）。我已经遇到了很多同学自己无法解决，找我排除代码中存在的问题。而这些问题98%都是由于语法问题，如缺少关键字（如&lt;code&gt;end&lt;/code&gt;、&lt;code&gt;then&lt;/code&gt;等）。但是我用VSCode，Lua插件一般都会直接给我自动补全。就算有什么问题也会高亮，或者使用快捷键格式化代码的时候也能看出问题。&lt;/p&gt;&#xA;&lt;p&gt;我认为，相比于更加现代的编辑器，MicroCity自带的编辑器“ScriptEditor”由于语法问题的标示不明显、格式化代码功能缺失等使用便利性上的问题，特别是对于Lua语言不熟练的新手，造成代码编写的错误率更高。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;说明：也许其中提到的功能存在于内在编辑器中，但是我反正是没有找到。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;对于我个人来说，VSCode的操作快捷键和各种特性我已经很熟悉，所以我也更倾向于使用VSCode编写Lua语言的脚本。但是对于使用VSCode编写适用于MicroCity运行的Lua脚本（&lt;code&gt;.mcs&lt;/code&gt;）而言，由于MicroCity内置了一些函数，无法在VSCode上高亮显示，因此需要特别整理出来方便日后使用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;常用函数&#34;&gt;常用函数&lt;/h2&gt;&#xA;&lt;p&gt;这里的函数不是全集，只是我用了多少就写多少😂&#xA;全部图形函数及使用方法参见 &lt;a href=&#34;https://github.com/microcity/microcity.github.io/blob/main/docs/4.3_shapes_and_tables.md&#34;&gt;MicroCity文档(英文) 4.3 Shapes And Tables&lt;/a&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;在本页中浏览可以使用右上角的目录列表快速转到对应函数。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;图形&#34;&gt;图形&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;函数&lt;/th&gt;&#xA;          &lt;th&gt;作用&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#Open&#34;&gt;&lt;code&gt;Open&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;打开图形文件，并获取图形文件对象&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#Update&#34;&gt;&lt;code&gt;Update&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;刷新图形&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;open&#34;&gt;Open&lt;/h4&gt;&#xA;&lt;p&gt;&lt;code&gt;Open(&amp;quot;路径&amp;quot;)&lt;/code&gt;，返回图形文件对象。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;countryObject &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;=&lt;/span&gt; Open(&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;countries.shp&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;update&#34;&gt;Update&lt;/h4&gt;&#xA;&lt;p&gt;&lt;code&gt;Update([图形对象])&lt;/code&gt;，刷新图形对象，显示最新的图形。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;Update(countryGRD)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;矢量图&#34;&gt;矢量图&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;函数&lt;/th&gt;&#xA;          &lt;th&gt;作用&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#GetRecCount&#34;&gt;&lt;code&gt;GetRecCount&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;获取图形文件中记录的图形对象个数&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#GetShape&#34;&gt;&lt;code&gt;GetShape&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;从图形文件对象中获取图形对象&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#GetPartCount&#34;&gt;&lt;code&gt;GetPartCount&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;获取对应图形对象分为多少个部分&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#GetPointCount&#34;&gt;&lt;code&gt;GetPointCount&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;获取对应图形对象（部分）有多少个点&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#GetPointXY&#34;&gt;&lt;code&gt;GetPointXY&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;获取图形对象指定部分、指定点编号的XY坐标&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#GetValue&#34;&gt;&lt;code&gt;GetValue&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;获取图形对象的属性值&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#SetValue&#34;&gt;&lt;code&gt;SetValue&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;设置图形对象的属性值&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#GetShapeLen&#34;&gt;&lt;code&gt;GetShapeLen&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;获取图形对象的长度&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#GetDistance&#34;&gt;&lt;code&gt;GetDistance&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;获取坐标点之间的距离&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;getreccount&#34;&gt;GetRecCount&lt;/h4&gt;&#xA;&lt;p&gt;&lt;code&gt;GetRecCount([图形文件对象])&lt;/code&gt;，返回图形文件中记录的图形对象个数。&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用Python编写遗传算法</title>
      <link>http://localhost:1313/posts/ga/</link>
      <pubDate>Wed, 13 Jul 2022 12:07:30 +0000</pubDate>
      <guid>http://localhost:1313/posts/ga/</guid>
      <description>&lt;p&gt;算法设计，附源码&lt;/p&gt;&#xA;&lt;h1 id=&#34;概述&#34;&gt;概述&lt;/h1&gt;&#xA;&lt;p&gt;当涉及非线性规划问题或者难以在短时间内求得满意解的线性规划问题，可以通过求其近似解（或满意解）而非精确解。使用遗传算法求解近似解所消耗的时间远少于求解精确解，多数时候近似解的效果都可以接受。&#xA;遗传算法的优势体现在：在小规模问题上，遗传算法求解得到的通常是精确解；而在大规模问题上，遗传算法通常可以通过较短的时间求得精确解。&#xA;&lt;img src=&#34;ga1.webp&#34; alt=&#34;ga&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;同样的问题通过遗传算法求解近似解和线性规划求解精确解，遗传算法花费的时间显著短于精确算法。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;算法&lt;/th&gt;&#xA;          &lt;th&gt;时长&lt;/th&gt;&#xA;          &lt;th&gt;结果(此处结果越小越好）&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;遗传算法&lt;/td&gt;&#xA;          &lt;td&gt;123s (2m03s)&lt;/td&gt;&#xA;          &lt;td&gt;371.06&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;精确算法&lt;/td&gt;&#xA;          &lt;td&gt;201s (3m21s)&lt;/td&gt;&#xA;          &lt;td&gt;367.07&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;模型描述&#34;&gt;模型描述&lt;/h1&gt;&#xA;&lt;h2 id=&#34;目标函数&#34;&gt;目标函数&lt;/h2&gt;&#xA;&lt;p&gt;$minf=P\sum_{k=1}^K\sum_{i=1}^N\sum_{j=1}^Nx_{kij}d_{ij}+\frac{P_a}{Q}\sum_{i=1}^N\sum_{j=1}^N(y_{ij}+z_{ij})x_{kij}d_{ij}+P_m\sum_{k=1}^K\sum_{i=1}^N\sum_{j=M}^Nx_{kij}q_j$&lt;/p&gt;&#xA;&lt;h2 id=&#34;约束方程&#34;&gt;约束方程&lt;/h2&gt;&#xA;&lt;div&gt;&#xA;$$&#xA;s.t.\left\{  &#xA;\begin{array}{**lr**}  &#xA;\sum_{k=1}^K\sum_{i=1}^Nx_{kij}=1 &amp; j=2,3,...,N \\  &#xA;\sum_{j=1}^Nx_{kij} = \sum_{j=1}^Nx_{kij} &amp; i=1,2,...,N;k=1,2,...,K \\&#xA;\sum_{j=1}^Nx_{k1j} \le 1 &amp; k=1,2,...,K \\&#xA;y_{ij}+z_{ij} \le Q\sum_{k=1}^Kx_{kij} &amp; i,j=2,3,...,N \\&#xA;\sum_{i=1}^N\sum_{j=1}^Nx_{kij}d_{ij} \leq D &amp; k=1,2,...,K \\&#xA;\sum_{j=1}^Nz_{ij}-\sum_{j=1}^Nz_{ij}=p_i &amp; i=2,3,...,N \\&#xA;\sum_{i=1}^Nx_{kii}=0 &amp; j=1,2,...,N \\&#xA;\sum_{i=2}^N\sum_{j=1}^Nx_{kij} \le V &amp; k=1,2,...,K \\&#xA;y_{ij} \ge 0 ,z_{ij} \ge 0 &amp; i,j=1,2,...,N&#xA;\end{array}  &#xA;\right.&#xA;$$&#xA;&lt;/div&gt;&#xA;&lt;h1 id=&#34;遗传算法设计&#34;&gt;遗传算法设计&lt;/h1&gt;&#xA;&lt;p&gt;经过本次从0开始编写遗传算法求解模型，我将遗传算法划分为几个模块（步骤）&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQL入门</title>
      <link>http://localhost:1313/posts/sql-basics/</link>
      <pubDate>Sun, 27 Mar 2022 11:52:50 +0000</pubDate>
      <guid>http://localhost:1313/posts/sql-basics/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;*&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;2&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#cba6f7&#34;&gt;table&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;3&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#cba6f7&#34;&gt;column&lt;/span&gt; &lt;span style=&#34;color:#cba6f7&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#39;条件&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;4&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;Order&lt;/span&gt; &lt;span style=&#34;color:#cba6f7&#34;&gt;by&lt;/span&gt; &lt;span style=&#34;color:#fab387&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;5&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color:#fab387&#34;&gt;100&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;基本语法&#34;&gt;基本语法&lt;/h1&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;--&lt;/code&gt;后面是注释内容。&lt;code&gt;--&lt;/code&gt;是sql的注释标志&lt;/p&gt;&#xA;&lt;h2 id=&#34;运算符&#34;&gt;运算符&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;运算符&lt;/th&gt;&#xA;          &lt;th&gt;说明&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;AND&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;和，AND的优先级一般会高于OR&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;OR&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;或者&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;NOT&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;非&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;()&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;括号，提高优先级。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;条件&#34;&gt;条件&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;符号&lt;/th&gt;&#xA;          &lt;th&gt;含义&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;%&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;n个任意字符&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;_&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;1个任意字符&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;正则表达式&#34;&gt;正则表达式&lt;/h2&gt;&#xA;&lt;p&gt;REGEXP（Regular Expression）&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#cba6f7&#34;&gt;column&lt;/span&gt; REGEXP &lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#39;表达式&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;符号&lt;/th&gt;&#xA;          &lt;th&gt;意义&lt;/th&gt;&#xA;          &lt;th&gt;例子&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;^&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;以..开头&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;^field&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt; $&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;以..结尾&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;field$&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;\&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;或者&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;^field｜mac｜rose&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;匹配中括号内的所有字符&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;[gim]e&lt;/code&gt;，匹配ge、ie、me，&lt;br&gt;&lt;code&gt;[a-c]d&lt;/code&gt;，匹配&lt;br&gt;ad、bd、cd，&lt;br&gt;&lt;code&gt;[1-3]&lt;/code&gt;同理&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;注意：由于我使用的markdown编译器无法将表格中的代码中的&lt;code&gt;|&lt;/code&gt;识别为符号，以上的&lt;code&gt;|&lt;/code&gt;为全角符号&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;null&#34;&gt;NULL&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;表达式&lt;/th&gt;&#xA;          &lt;th&gt;含义&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;IS NULL&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;值为&lt;code&gt;null&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;IS NOT NULL&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;值不为&lt;code&gt;null&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;as&#34;&gt;AS&lt;/h2&gt;&#xA;&lt;p&gt;在原有数据基础上新建一列数据，或者理解为处理完原有列数据填入新一列中&lt;/p&gt;</description>
    </item>
    <item>
      <title>C# Task</title>
      <link>http://localhost:1313/posts/csharp-task/</link>
      <pubDate>Fri, 25 Mar 2022 11:56:41 +0000</pubDate>
      <guid>http://localhost:1313/posts/csharp-task/</guid>
      <description>&lt;h1 id=&#34;task&#34;&gt;Task&lt;/h1&gt;&#xA;&lt;p&gt;线程的问题：线程(Thread)是用来创建并发的一种低级别工具，尤其在于以下方面有一些限制：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;虽然开始线程的时候可以方便地传入数据，但是当&lt;code&gt;Join&lt;/code&gt;（等待）的时候，很难从线程获得返回值。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可能需要设置一些共享字段&lt;/li&gt;&#xA;&lt;li&gt;如果抛出异常，捕获和传播该异常都很麻烦&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;无法告诉线程在结束时开始做另外的工作，必须进行&lt;code&gt;Join&lt;/code&gt;操作，在进程中阻塞当前的进程，等待线程结束。&lt;/li&gt;&#xA;&lt;li&gt;对手动同步的更大依赖以及随之而来的问题&#xA;&lt;code&gt;Task&lt;/code&gt;类可以很好地解决上述问题。&lt;code&gt;Task&lt;/code&gt;是一个相对高级的抽象，它代表了一个并发操作(concurrent)，该操作可能由Thread支持，或不由Thread支持。并且，Task是可组合的。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Tasks&lt;/code&gt;可以使用线程池来减少启动延迟&lt;/li&gt;&#xA;&lt;li&gt;使用&lt;code&gt;TaskCompletionSource&lt;/code&gt;，Tasks可以利用回调的方式在等待I/O绑定操作是完全避免线程。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;开始一个task&#34;&gt;开始一个Task&lt;/h2&gt;&#xA;&lt;p&gt;开始一个Task最简单的方法就是使用&lt;code&gt;Task.Run&lt;/code&gt;这个静态方法。(.NET4.5开始，.NET4.0的时候是&lt;code&gt;Task.Factory.StartNew&lt;/code&gt;这个静态方法) 使用方法：传入一个Action委托即可。&lt;/p&gt;&#xA;&lt;p&gt;Task默认使用线程池，也就是后台线程。当主线程结束时，创建的所有任务都会结束。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#f38ba8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#cba6f7&#34;&gt;void&lt;/span&gt; Main(&lt;span style=&#34;color:#f38ba8&#34;&gt;string&lt;/span&gt;[] args)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;2&lt;/span&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;3&lt;/span&gt;&lt;span&gt;    Task.Run(() =&amp;gt; Console.WriteLine(&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;Foo&amp;#34;&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;4&lt;/span&gt;&lt;span&gt;    Console.ReadLine(); &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;// 可以达到阻塞线程的效果。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;5&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;// 如果程序运行完了，由于Task是后台线程，Task也会被关闭。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;6&lt;/span&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;Task.Run&lt;/code&gt;返回一个Task对象，可以使用它来监视其过程。&lt;code&gt;Task.Run&lt;/code&gt;之后没有调用&lt;code&gt;Start&lt;/code&gt;，因为该方法创建的是“热”任务(hot task)；可以通过Task的构造函数创建“冷”任务(cold task)，但很少这样做。&lt;/p&gt;&#xA;&lt;h2 id=&#34;wait&#34;&gt;Wait&lt;/h2&gt;&#xA;&lt;p&gt;调用Task的Wait方法会进行阻塞直到操作完成（相当于调用Thread上的Join方法）&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#f38ba8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#cba6f7&#34;&gt;void&lt;/span&gt; Main(&lt;span style=&#34;color:#f38ba8&#34;&gt;string&lt;/span&gt;[] args)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 2&lt;/span&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 3&lt;/span&gt;&lt;span&gt;    Task task = Task.Run(() =&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 4&lt;/span&gt;&lt;span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 5&lt;/span&gt;&lt;span&gt;        Thread.Sleep(&lt;span style=&#34;color:#fab387&#34;&gt;3000&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 6&lt;/span&gt;&lt;span&gt;        Console.WriteLine(&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;Foo&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 7&lt;/span&gt;&lt;span&gt;    }); &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;//创建一个“热任务”&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 8&lt;/span&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 9&lt;/span&gt;&lt;span&gt;    Console.WriteLine(task.IsCompleted); &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;//False&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;10&lt;/span&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;11&lt;/span&gt;&lt;span&gt;    task.Wait(); &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;//阻塞至task完成操作&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;12&lt;/span&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;13&lt;/span&gt;&lt;span&gt;    Console.WriteLine(task.IsCompleted); &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;//True&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;14&lt;/span&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;15&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;// False&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;16&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;// Foo&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;17&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;// True&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;18&lt;/span&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Wait也可以指定一个超时时间和取消令牌来提前结束等待。&lt;/p&gt;</description>
    </item>
    <item>
      <title>C# 线程</title>
      <link>http://localhost:1313/posts/csharp-thread/</link>
      <pubDate>Fri, 25 Mar 2022 11:31:09 +0000</pubDate>
      <guid>http://localhost:1313/posts/csharp-thread/</guid>
      <description>&lt;h1 id=&#34;thread-线程&#34;&gt;Thread 线程&lt;/h1&gt;&#xA;&lt;p&gt;一个可执行路径，独立于其它线程执行。&lt;/p&gt;&#xA;&lt;h2 id=&#34;线程被抢占&#34;&gt;线程被抢占&lt;/h2&gt;&#xA;&lt;p&gt;线程的执行与另外一个线程上代码的执行交织的那一点。&lt;/p&gt;&#xA;&lt;h2 id=&#34;线程的属性特性&#34;&gt;线程的属性&amp;amp;特性&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;线程一旦开始执行，&lt;code&gt;IsAlive&lt;/code&gt;为&lt;code&gt;true&lt;/code&gt;；线程结束变成&lt;code&gt;false&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;线程结束的条件：线程构造函数传入的委托执行结束&lt;/li&gt;&#xA;&lt;li&gt;线程一旦结束，无法重启&lt;/li&gt;&#xA;&lt;li&gt;每个线程都有&lt;code&gt;Name&lt;/code&gt;属性，通常用于调试。&lt;code&gt;Name&lt;/code&gt;只能设置一次，更改会抛出异常。&lt;/li&gt;&#xA;&lt;li&gt;静态的&lt;code&gt;Thread.CurrentThread&lt;/code&gt;属性返回当前执行的线程。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;join&#34;&gt;Join&lt;/h2&gt;&#xA;&lt;p&gt;调用&lt;code&gt;Join&lt;/code&gt;方法，可以&lt;strong&gt;等待另一个线程结束。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 1&lt;/span&gt;&lt;span&gt;Thread t = &lt;span style=&#34;color:#cba6f7&#34;&gt;new&lt;/span&gt; Thread(Go);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 2&lt;/span&gt;&lt;span&gt;t.Start(); &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;//开始线程&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 3&lt;/span&gt;&lt;span&gt;t.Join(); &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;//等待线程执行完成&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 4&lt;/span&gt;&lt;span&gt;Console.WriteLine(&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;Thread t has ended!&amp;#34;&lt;/span&gt;); &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;//线程结束&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 5&lt;/span&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 6&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#f38ba8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#cba6f7&#34;&gt;void&lt;/span&gt; Go() &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;//线程构造函数传入的委托&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 7&lt;/span&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 8&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#cba6f7&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#f38ba8&#34;&gt;int&lt;/span&gt; i = &lt;span style=&#34;color:#fab387&#34;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span style=&#34;color:#fab387&#34;&gt;1000&lt;/span&gt;; i++)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 9&lt;/span&gt;&lt;span&gt;        Console.Write(&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;10&lt;/span&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;添加超时&#34;&gt;添加超时&lt;/h3&gt;&#xA;&lt;p&gt;调用&lt;code&gt;Join&lt;/code&gt;的时候，可以设置一个超时，可以使用毫秒或者&lt;code&gt;TimeSpan&lt;/code&gt;&#xA;如果返回&lt;code&gt;true&lt;/code&gt;，线程结束；如果超时，返回&lt;code&gt;false&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>进程管理（操作系统）</title>
      <link>http://localhost:1313/posts/multi-threading-hardware/</link>
      <pubDate>Tue, 22 Mar 2022 23:13:13 +0000</pubDate>
      <guid>http://localhost:1313/posts/multi-threading-hardware/</guid>
      <description>&lt;p&gt;操作系统方面的进程管理&lt;/p&gt;&#xA;&lt;h1 id=&#34;进程&#34;&gt;进程&lt;/h1&gt;&#xA;&lt;p&gt;进程是一个可并发执行的具有独立功能的程序关于某个数据集合的一次执行过程，是操作系统进行&lt;strong&gt;资源分配和保护的基本单位&lt;/strong&gt;。进程是程序在处理机上的一次执行过程。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;动态性：创建👉产生；调度👉执行；得不到资源👉阻塞；撤销👉消亡&lt;/li&gt;&#xA;&lt;li&gt;并发性：多个进程可同时存在于内存中，在一段时间内&lt;strong&gt;同时运行&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;独立性：独立获得资源的基本单位&lt;/li&gt;&#xA;&lt;li&gt;异步性：各进程按各自独立的不可预知的速度执行&lt;/li&gt;&#xA;&lt;li&gt;交往性（制约性）：进程至今啊相互制约，互斥地使用某些资源、相关进程之间同步、通信等。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;进程的静态描述&#34;&gt;进程的静态描述&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%9D%97&#34;&gt;进程控制块&lt;/a&gt;：反映了进程的动态特征。&lt;/li&gt;&#xA;&lt;li&gt;程序段：能被调度程序选中，并在CPU上执行的程序代码段&lt;/li&gt;&#xA;&lt;li&gt;数据段：进程对应的原始数据、中间或最终数据&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;进程控制块&#34;&gt;进程控制块&lt;/h2&gt;&#xA;&lt;p&gt;进程控制块 PCB(Process Control Block)&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;是操作系统为了管理进程设置的一个数据结构，用于记录和描述进程。&lt;/li&gt;&#xA;&lt;li&gt;系统利用PCB控制和管理进程。一个进程只有一个PCB，PCB是进程是否存在的唯一标记，是系统感知进程存在的唯一标志。&lt;/li&gt;&#xA;&lt;li&gt;进程与PCB一一对应。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;PCB包含如下信息：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;描述信息：ID、进程组关系（父进程、子进程）&lt;/li&gt;&#xA;&lt;li&gt;控制信息：状态、优先级、外存地址、运行同级信息等&lt;/li&gt;&#xA;&lt;li&gt;资源管理信息：指针、占用内存大小等&lt;/li&gt;&#xA;&lt;li&gt;CPU现场保护结构：当前进程的执行被打断，储存进程现场数据&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;PCB组织方式：线性、链接（链表）、索引&lt;/p&gt;&#xA;&lt;h2 id=&#34;进程上下文&#34;&gt;进程上下文&lt;/h2&gt;&#xA;&lt;p&gt;操作系统中，把&lt;strong&gt;进程物理实体&lt;/strong&gt;和&lt;strong&gt;支持进程运行的环境&lt;/strong&gt;合称为进程上下文。&#xA;系统调度新进程时，新老进程的上下文将进行切换。&lt;/p&gt;&#xA;&lt;h2 id=&#34;进程的状态&#34;&gt;进程的状态&lt;/h2&gt;&#xA;&lt;p&gt;进程的三种基本状态&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;就绪态：已经得到除了CPU以外的其它资源&lt;/li&gt;&#xA;&lt;li&gt;运行态：占用CPU&lt;/li&gt;&#xA;&lt;li&gt;阻塞态：正在等待某一事件发生&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;进程的控制&#34;&gt;进程的控制&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;fork()&lt;/code&gt;：进程创建。调用者用&lt;code&gt;fork()&lt;/code&gt;建立一个子进程和自己独立并发地运行。创建的子进程基本拷贝父进程的上下文（正文段（代码）共享）&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;fork()&lt;/code&gt;返回值为-1：进程创建不成功&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;fork()&lt;/code&gt;返回值大于0：在父进程的上下文中，&lt;code&gt;fork()&lt;/code&gt;返回值为子进程标识号&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;fork()&lt;/code&gt;返回值等于0：在子进程的上下文中。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;wait()&lt;/code&gt;：进程挂起等待（封锁）。调用者进入封锁状态等待它的子进程终止。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;exit()&lt;/code&gt;：进程终止。调用者将终止自己，并解除父进程的封锁（&lt;code&gt;wait()&lt;/code&gt;）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;execvp(filename,argp)&lt;/code&gt;：进程上下文更换。用文件名&lt;code&gt;filename&lt;/code&gt;所指定的可执行文件来替换当前进程上下文中的程序和数据部分，并转入执行。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;常见代码段&#34;&gt;常见代码段&lt;/h3&gt;&#xA;&lt;p&gt;循环创建线程。如果创建不成功（返回值为1），则执行&lt;code&gt;;&lt;/code&gt;语句&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;while&lt;/span&gt;((i&lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#89b4fa&#34;&gt;fork&lt;/span&gt;()) &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#fab387&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建子线程。父线程和子线程将（将开始）同时在这里执行。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;i&lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#89b4fa&#34;&gt;fork&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;判断现在执行的是父线程还是子线程&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;if&lt;/span&gt; (i&lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#fab387&#34;&gt;0&lt;/span&gt;) &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;// 子线程&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;2&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;// 父线程（i为大于0的进程id）&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;线程&#34;&gt;线程&lt;/h1&gt;&#xA;&lt;h2 id=&#34;线程和进程的区别和联系&#34;&gt;线程和进程的区别和联系&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;线程是进程的一部分，它是进程内的一个执行体。&lt;/li&gt;&#xA;&lt;li&gt;引入线程的操作系统中，&lt;strong&gt;资源分配的对象是进程，而不是线程。&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;引入线程的操作系统中，调度的基本单位是线程而不是进程。&lt;/li&gt;&#xA;&lt;li&gt;进程之间可以并发执行，而一个进程中的这些线程之间亦可以并发执行。&lt;/li&gt;&#xA;&lt;li&gt;进程调度，系统需要进行进程上下文的切换，需要大量的系统开销。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;线程切换比进程切换快得多。&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;从一个进程的线程向另一个进程的线程切换，&lt;strong&gt;将引起线程的上下文切换。&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;从安全的角度来看，线程不如进程安全。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;线程控制块&#34;&gt;线程控制块&lt;/h2&gt;&#xA;&lt;p&gt;在管理线程的时候，同样也使用一种数据结构，称之为&lt;strong&gt;线程控制块TCB(Thread Control Block)&lt;/strong&gt;&#xA;线程控制块包含如下信息：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Xaml学习小结</title>
      <link>http://localhost:1313/posts/xaml-summary/</link>
      <pubDate>Wed, 16 Mar 2022 22:08:15 +0000</pubDate>
      <guid>http://localhost:1313/posts/xaml-summary/</guid>
      <description>&lt;p&gt;主要是Xaml的“绑定”和“资源”&lt;/p&gt;&#xA;&lt;h1 id=&#34;xaml静态资源绑定&#34;&gt;Xaml静态资源绑定&lt;/h1&gt;&#xA;&lt;p&gt;需要绑定一个resource的时候，需要的表达式就是大括号里面有“StaticResource”，再加上resource的名字。这种绑定只在App运行的时候进行一次，因为是静态资源，所以它就不会变了。&#xA;如：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;TextBlock&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Foreground =&lt;/span&gt; &lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;{StaticResource MyBrush}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#cba6f7&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;StaticResource&lt;/code&gt;表明了我们所绑定的资源的类型&lt;/p&gt;&#xA;&lt;h2 id=&#34;单个属性的绑定&#34;&gt;单个属性的绑定&lt;/h2&gt;&#xA;&lt;p&gt;可以创建单个属性的资源绑定，如：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;Page.Resources&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;2&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;SolidColorBrush&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;x:Key=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;MyBrush&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Color=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;Brown&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;3&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;/Page.Resources&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;4&lt;/span&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;5&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;&amp;lt;!-- 使用 --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;6&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;TextBlock&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Text=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;Hello World&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Foreground=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;{StaticResource MyBrush}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;还可以创建值绑定，如将&lt;code&gt;Slider&lt;/code&gt;的值绑定到&lt;code&gt;ProgessBar&lt;/code&gt;中：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;ProgressBar&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Maximum=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;100&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Value=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;{x:Bind MySlider.Value, Mode=OneWay}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;多个属性的绑定style&#34;&gt;多个属性的绑定（Style）&lt;/h2&gt;&#xA;&lt;p&gt;也可以创建多个值类型的绑定，如设置背景、字体、字号等属性，如：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;Page.Resources&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 2&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;Style&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;TargetType=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;Button&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;x:Key=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;MyButtonStyle&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 3&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;&amp;lt;!-- 定义了目标类型、样式（资源）名称 --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 4&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;&amp;lt;!-- 下面是各个属性值的设置 --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 5&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;Setter&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Property=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;Background&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Value=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;Blue&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 6&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;Setter&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Property=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;FontFamily&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Value=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;Arial Black&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 7&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;Setter&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Property=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;FontSize&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Value=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;36&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 8&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;/Style&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 9&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;/Page.Resources&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;10&lt;/span&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;11&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;Button&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Content=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;My Button Style Example&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;12&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#89b4fa&#34;&gt;Height=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;100&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;13&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#89b4fa&#34;&gt;Style=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;{StaticResource MyButtonStyle}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#cba6f7&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;14&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;&amp;lt;!-- 资源的名称是“MyButtonStyle” --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;属性的继承&#34;&gt;属性的继承&lt;/h2&gt;&#xA;&lt;p&gt;使用&lt;code&gt;BasedOn&lt;/code&gt;属性&#xA;如&lt;code&gt;HeaderTextBlockStyle&lt;/code&gt;就是继承自&lt;code&gt;BaseTextBlockStyle&lt;/code&gt;&#xA;原文引用：&lt;/p&gt;</description>
    </item>
    <item>
      <title>LINQ笔记&amp;实例</title>
      <link>http://localhost:1313/posts/linq/</link>
      <pubDate>Sat, 12 Mar 2022 16:29:27 +0000</pubDate>
      <guid>http://localhost:1313/posts/linq/</guid>
      <description>&lt;p&gt;LINQ：语言继承查询&lt;/p&gt;&#xA;&lt;h1 id=&#34;限制运算符-where&#34;&gt;限制运算符 Where&lt;/h1&gt;&#xA;&lt;p&gt;where语句的基本示例&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#f38ba8&#34;&gt;int&lt;/span&gt;[] numbers = {&lt;span style=&#34;color:#fab387&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#fab387&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#fab387&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#fab387&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#fab387&#34;&gt;9&lt;/span&gt;,&lt;span style=&#34;color:#fab387&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#fab387&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#fab387&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#fab387&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#fab387&#34;&gt;0&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;2&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#f38ba8&#34;&gt;var&lt;/span&gt; lowNums = &lt;span style=&#34;color:#cba6f7&#34;&gt;from&lt;/span&gt; num &lt;span style=&#34;color:#cba6f7&#34;&gt;in&lt;/span&gt; numbers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;3&lt;/span&gt;&lt;span&gt;              &lt;span style=&#34;color:#cba6f7&#34;&gt;where&lt;/span&gt; num &amp;lt; &lt;span style=&#34;color:#fab387&#34;&gt;5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;4&lt;/span&gt;&lt;span&gt;              &lt;span style=&#34;color:#cba6f7&#34;&gt;select&lt;/span&gt; num; &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;// 只选择小于5的数字&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;筛选符合属性条件的元素&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#f38ba8&#34;&gt;var&lt;/span&gt; soldOutProducts = &lt;span style=&#34;color:#cba6f7&#34;&gt;from&lt;/span&gt; prod &lt;span style=&#34;color:#cba6f7&#34;&gt;in&lt;/span&gt; products&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;2&lt;/span&gt;&lt;span&gt;                      &lt;span style=&#34;color:#cba6f7&#34;&gt;where&lt;/span&gt; prod.UnitsInStock == &lt;span style=&#34;color:#fab387&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;3&lt;/span&gt;&lt;span&gt;                      &lt;span style=&#34;color:#cba6f7&#34;&gt;select&lt;/span&gt; prod; &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;// 从集合中选出符合属性的元素&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;用多个条件筛选元素&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#f38ba8&#34;&gt;var&lt;/span&gt; expensiveInStockProducts = &lt;span style=&#34;color:#cba6f7&#34;&gt;from&lt;/span&gt; prod &lt;span style=&#34;color:#cba6f7&#34;&gt;in&lt;/span&gt; products&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;2&lt;/span&gt;&lt;span&gt;                               &lt;span style=&#34;color:#cba6f7&#34;&gt;where&lt;/span&gt; prod.UnitsInStock &amp;gt; &lt;span style=&#34;color:#fab387&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; prod.UnitPrice &amp;gt; &lt;span style=&#34;color:#fab387&#34;&gt;3.00&lt;/span&gt;M&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;3&lt;/span&gt;&lt;span&gt;                               &lt;span style=&#34;color:#cba6f7&#34;&gt;select&lt;/span&gt; prod; &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;// 从集合中选出符合上述两个条件的元素&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;基于元素在列表中位置的筛选&lt;/p&gt;</description>
    </item>
    <item>
      <title>正则表达式笔记</title>
      <link>http://localhost:1313/posts/regular-expression/</link>
      <pubDate>Thu, 31 Dec 2020 19:32:35 +0000</pubDate>
      <guid>http://localhost:1313/posts/regular-expression/</guid>
      <description>&lt;p&gt;🔗 链接&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://c.runoob.com/front-end/854&#34;&gt;正则表达式在线测试 | 菜鸟工具&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;标记&#34;&gt;标记&lt;/h1&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;表达式&lt;/th&gt;&#xA;          &lt;th&gt;作用&lt;/th&gt;&#xA;          &lt;th&gt;示例&lt;/th&gt;&#xA;          &lt;th&gt;作用&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;^&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;匹配行首&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;^a&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;匹配 a 在行首的情况&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;$&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;结匹配行尾&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;a$&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;匹配 a 在行尾的情况&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;普通字符大小写敏感&#34;&gt;普通字符（大小写敏感）&lt;/h1&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;表达式&lt;/th&gt;&#xA;          &lt;th&gt;作用&lt;/th&gt;&#xA;          &lt;th&gt;示例&lt;/th&gt;&#xA;          &lt;th&gt;作用&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;只能匹配中括号中的字符&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;[ABC]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;匹配字符串中的所有 A、B、C&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;[^A]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;除去&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;[^ABC]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;得到除了 ABC 以外的所有字符&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;[A-Z]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;某一个区间(可以是大写区间、小写区间、数字区间)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;[A-C]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;匹配 A-C 的区间&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;匹配 除换行符的所有单个字符,相当于&lt;code&gt;[^\n\r]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;[\s]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;匹配 空白字符（空格、换行）&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;[\s]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;匹配 非空白字符（包括换行）&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;[\w]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;匹配 字母、数字、下划线,相当于&lt;code&gt;[A-Za-z0-9]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;非打印字符&#34;&gt;非打印字符&lt;/h1&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;符号&lt;/th&gt;&#xA;          &lt;th&gt;作用&lt;/th&gt;&#xA;          &lt;th&gt;示例&lt;/th&gt;&#xA;          &lt;th&gt;作用&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;\ca&lt;/td&gt;&#xA;          &lt;td&gt;匹配 control+a 的快捷键（\c 是表示 c，\为转义）(\cx 的 x 必须是 A-Z 或者 a-z)&lt;/td&gt;&#xA;          &lt;td&gt;\cv&lt;/td&gt;&#xA;          &lt;td&gt;匹配 ctrl+v 的快捷键&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;\f&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;换页符&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;\n&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;换行符&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;\r&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;回车&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;\s&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;空白字符，包括空格、制表符、换页符等等&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;\S&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;非空白字符，包括回车&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;\t&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;制表符（Tab）&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;\v&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;垂直制表符(Vertical Tab)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;\d&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;数字字符，等价于&lt;code&gt;[0-9]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;\D&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;非数字字符，等价于&lt;code&gt;[^0-9]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;\w&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;单词(word)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;\W&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;非单词&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;特殊字符&#34;&gt;特殊字符&lt;/h1&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;符号&lt;/th&gt;&#xA;          &lt;th&gt;作用&lt;/th&gt;&#xA;          &lt;th&gt;示例&lt;/th&gt;&#xA;          &lt;th&gt;作用&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt; $&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;匹配字符串的结尾位置&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;()&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;标记一个子表达式开始和结束的位置&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;*&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;匹配前面的子表达式 0 次或多次&lt;/td&gt;&#xA;          &lt;td&gt;go*gle&lt;/td&gt;&#xA;          &lt;td&gt;可以匹配 ggle,google,gooooogle 等&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;+&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;匹配前面的子表达式 1 次或多次(1+)&lt;/td&gt;&#xA;          &lt;td&gt;go+gle&lt;/td&gt;&#xA;          &lt;td&gt;可以匹配 gogle,goooogle 等&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;匹配除换行符之外的任何单字符&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;[&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;标记一个中括号表达式的开始&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;?&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;匹配前面的字符可有可无,或指明一个非贪婪限定符&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;\&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;转义符&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;^&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;匹配输入字符串的开始位置&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;{&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;标记限定符表达式的开始&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;｜&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;或（两项之间的选择）&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;a｜b&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;匹配 a 或 b&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;限定符&#34;&gt;限定符&lt;/h1&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;符号&lt;/th&gt;&#xA;          &lt;th&gt;作用&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;{n}&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;匹配 n 次&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;{n,}&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;匹配 n 次及以上&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;{n,m}&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;至少匹配 n 次，至多匹配 m 次&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;高级匹配&#34;&gt;高级匹配&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;贪婪匹配：&lt;/strong&gt; 匹配到最后&#xA;&lt;code&gt;&amp;lt;.+&amp;gt;&lt;/code&gt;默认贪婪匹配任意字符&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;懒惰匹配：&lt;/strong&gt; 匹配到就停止&#xA;&lt;code&gt;&amp;lt;.+?&amp;gt;&lt;/code&gt;懒惰匹配任意字符&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
