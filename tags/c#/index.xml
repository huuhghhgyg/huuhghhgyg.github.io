<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C# on Hikaru&#39;s Blog</title>
    <link>https://www.zhhuu.top/tags/c%23/</link>
    <description>Recent content in C# on Hikaru&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 25 Mar 2022 11:56:41 +0000</lastBuildDate>
    <atom:link href="https://www.zhhuu.top/tags/c%23/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C# Task</title>
      <link>https://www.zhhuu.top/posts/csharp-task/</link>
      <pubDate>Fri, 25 Mar 2022 11:56:41 +0000</pubDate>
      <guid>https://www.zhhuu.top/posts/csharp-task/</guid>
      <description>&lt;h1 id=&#34;task&#34;&gt;Task&lt;/h1&gt;&#xA;&lt;p&gt;线程的问题：线程(Thread)是用来创建并发的一种低级别工具，尤其在于以下方面有一些限制：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;虽然开始线程的时候可以方便地传入数据，但是当&lt;code&gt;Join&lt;/code&gt;（等待）的时候，很难从线程获得返回值。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可能需要设置一些共享字段&lt;/li&gt;&#xA;&lt;li&gt;如果抛出异常，捕获和传播该异常都很麻烦&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;无法告诉线程在结束时开始做另外的工作，必须进行&lt;code&gt;Join&lt;/code&gt;操作，在进程中阻塞当前的进程，等待线程结束。&lt;/li&gt;&#xA;&lt;li&gt;对手动同步的更大依赖以及随之而来的问题&#xA;&lt;code&gt;Task&lt;/code&gt;类可以很好地解决上述问题。&lt;code&gt;Task&lt;/code&gt;是一个相对高级的抽象，它代表了一个并发操作(concurrent)，该操作可能由Thread支持，或不由Thread支持。并且，Task是可组合的。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Tasks&lt;/code&gt;可以使用线程池来减少启动延迟&lt;/li&gt;&#xA;&lt;li&gt;使用&lt;code&gt;TaskCompletionSource&lt;/code&gt;，Tasks可以利用回调的方式在等待I/O绑定操作是完全避免线程。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;开始一个task&#34;&gt;开始一个Task&lt;/h2&gt;&#xA;&lt;p&gt;开始一个Task最简单的方法就是使用&lt;code&gt;Task.Run&lt;/code&gt;这个静态方法。(.NET4.5开始，.NET4.0的时候是&lt;code&gt;Task.Factory.StartNew&lt;/code&gt;这个静态方法) 使用方法：传入一个Action委托即可。&lt;/p&gt;&#xA;&lt;p&gt;Task默认使用线程池，也就是后台线程。当主线程结束时，创建的所有任务都会结束。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#f38ba8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#cba6f7&#34;&gt;void&lt;/span&gt; Main(&lt;span style=&#34;color:#f38ba8&#34;&gt;string&lt;/span&gt;[] args)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;2&lt;/span&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;3&lt;/span&gt;&lt;span&gt;    Task.Run(() =&amp;gt; Console.WriteLine(&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;Foo&amp;#34;&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;4&lt;/span&gt;&lt;span&gt;    Console.ReadLine(); &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;// 可以达到阻塞线程的效果。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;5&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;// 如果程序运行完了，由于Task是后台线程，Task也会被关闭。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;6&lt;/span&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;Task.Run&lt;/code&gt;返回一个Task对象，可以使用它来监视其过程。&lt;code&gt;Task.Run&lt;/code&gt;之后没有调用&lt;code&gt;Start&lt;/code&gt;，因为该方法创建的是“热”任务(hot task)；可以通过Task的构造函数创建“冷”任务(cold task)，但很少这样做。&lt;/p&gt;&#xA;&lt;h2 id=&#34;wait&#34;&gt;Wait&lt;/h2&gt;&#xA;&lt;p&gt;调用Task的Wait方法会进行阻塞直到操作完成（相当于调用Thread上的Join方法）&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#f38ba8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#cba6f7&#34;&gt;void&lt;/span&gt; Main(&lt;span style=&#34;color:#f38ba8&#34;&gt;string&lt;/span&gt;[] args)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 2&lt;/span&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 3&lt;/span&gt;&lt;span&gt;    Task task = Task.Run(() =&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 4&lt;/span&gt;&lt;span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 5&lt;/span&gt;&lt;span&gt;        Thread.Sleep(&lt;span style=&#34;color:#fab387&#34;&gt;3000&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 6&lt;/span&gt;&lt;span&gt;        Console.WriteLine(&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;Foo&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 7&lt;/span&gt;&lt;span&gt;    }); &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;//创建一个“热任务”&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 8&lt;/span&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 9&lt;/span&gt;&lt;span&gt;    Console.WriteLine(task.IsCompleted); &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;//False&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;10&lt;/span&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;11&lt;/span&gt;&lt;span&gt;    task.Wait(); &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;//阻塞至task完成操作&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;12&lt;/span&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;13&lt;/span&gt;&lt;span&gt;    Console.WriteLine(task.IsCompleted); &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;//True&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;14&lt;/span&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;15&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;// False&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;16&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;// Foo&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;17&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;// True&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;18&lt;/span&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Wait也可以指定一个超时时间和取消令牌来提前结束等待。&lt;/p&gt;</description>
    </item>
    <item>
      <title>C# 线程</title>
      <link>https://www.zhhuu.top/posts/csharp-thread/</link>
      <pubDate>Fri, 25 Mar 2022 11:31:09 +0000</pubDate>
      <guid>https://www.zhhuu.top/posts/csharp-thread/</guid>
      <description>&lt;h1 id=&#34;thread-线程&#34;&gt;Thread 线程&lt;/h1&gt;&#xA;&lt;p&gt;一个可执行路径，独立于其它线程执行。&lt;/p&gt;&#xA;&lt;h2 id=&#34;线程被抢占&#34;&gt;线程被抢占&lt;/h2&gt;&#xA;&lt;p&gt;线程的执行与另外一个线程上代码的执行交织的那一点。&lt;/p&gt;&#xA;&lt;h2 id=&#34;线程的属性特性&#34;&gt;线程的属性&amp;amp;特性&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;线程一旦开始执行，&lt;code&gt;IsAlive&lt;/code&gt;为&lt;code&gt;true&lt;/code&gt;；线程结束变成&lt;code&gt;false&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;线程结束的条件：线程构造函数传入的委托执行结束&lt;/li&gt;&#xA;&lt;li&gt;线程一旦结束，无法重启&lt;/li&gt;&#xA;&lt;li&gt;每个线程都有&lt;code&gt;Name&lt;/code&gt;属性，通常用于调试。&lt;code&gt;Name&lt;/code&gt;只能设置一次，更改会抛出异常。&lt;/li&gt;&#xA;&lt;li&gt;静态的&lt;code&gt;Thread.CurrentThread&lt;/code&gt;属性返回当前执行的线程。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;join&#34;&gt;Join&lt;/h2&gt;&#xA;&lt;p&gt;调用&lt;code&gt;Join&lt;/code&gt;方法，可以&lt;strong&gt;等待另一个线程结束。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 1&lt;/span&gt;&lt;span&gt;Thread t = &lt;span style=&#34;color:#cba6f7&#34;&gt;new&lt;/span&gt; Thread(Go);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 2&lt;/span&gt;&lt;span&gt;t.Start(); &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;//开始线程&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 3&lt;/span&gt;&lt;span&gt;t.Join(); &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;//等待线程执行完成&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 4&lt;/span&gt;&lt;span&gt;Console.WriteLine(&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;Thread t has ended!&amp;#34;&lt;/span&gt;); &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;//线程结束&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 5&lt;/span&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 6&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#f38ba8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#cba6f7&#34;&gt;void&lt;/span&gt; Go() &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;//线程构造函数传入的委托&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 7&lt;/span&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 8&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#cba6f7&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#f38ba8&#34;&gt;int&lt;/span&gt; i = &lt;span style=&#34;color:#fab387&#34;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span style=&#34;color:#fab387&#34;&gt;1000&lt;/span&gt;; i++)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 9&lt;/span&gt;&lt;span&gt;        Console.Write(&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;10&lt;/span&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;添加超时&#34;&gt;添加超时&lt;/h3&gt;&#xA;&lt;p&gt;调用&lt;code&gt;Join&lt;/code&gt;的时候，可以设置一个超时，可以使用毫秒或者&lt;code&gt;TimeSpan&lt;/code&gt;&#xA;如果返回&lt;code&gt;true&lt;/code&gt;，线程结束；如果超时，返回&lt;code&gt;false&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Xaml学习小结</title>
      <link>https://www.zhhuu.top/posts/xaml-summary/</link>
      <pubDate>Wed, 16 Mar 2022 22:08:15 +0000</pubDate>
      <guid>https://www.zhhuu.top/posts/xaml-summary/</guid>
      <description>&lt;p&gt;主要是Xaml的“绑定”和“资源”&lt;/p&gt;&#xA;&lt;h1 id=&#34;xaml静态资源绑定&#34;&gt;Xaml静态资源绑定&lt;/h1&gt;&#xA;&lt;p&gt;需要绑定一个resource的时候，需要的表达式就是大括号里面有“StaticResource”，再加上resource的名字。这种绑定只在App运行的时候进行一次，因为是静态资源，所以它就不会变了。&#xA;如：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;TextBlock&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Foreground =&lt;/span&gt; &lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;{StaticResource MyBrush}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#cba6f7&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;StaticResource&lt;/code&gt;表明了我们所绑定的资源的类型&lt;/p&gt;&#xA;&lt;h2 id=&#34;单个属性的绑定&#34;&gt;单个属性的绑定&lt;/h2&gt;&#xA;&lt;p&gt;可以创建单个属性的资源绑定，如：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;Page.Resources&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;2&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;SolidColorBrush&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;x:Key=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;MyBrush&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Color=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;Brown&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;3&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;/Page.Resources&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;4&lt;/span&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;5&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;&amp;lt;!-- 使用 --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;6&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;TextBlock&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Text=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;Hello World&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Foreground=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;{StaticResource MyBrush}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;还可以创建值绑定，如将&lt;code&gt;Slider&lt;/code&gt;的值绑定到&lt;code&gt;ProgessBar&lt;/code&gt;中：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;ProgressBar&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Maximum=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;100&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Value=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;{x:Bind MySlider.Value, Mode=OneWay}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;多个属性的绑定style&#34;&gt;多个属性的绑定（Style）&lt;/h2&gt;&#xA;&lt;p&gt;也可以创建多个值类型的绑定，如设置背景、字体、字号等属性，如：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;Page.Resources&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 2&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;Style&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;TargetType=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;Button&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;x:Key=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;MyButtonStyle&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 3&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;&amp;lt;!-- 定义了目标类型、样式（资源）名称 --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 4&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;&amp;lt;!-- 下面是各个属性值的设置 --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 5&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;Setter&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Property=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;Background&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Value=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;Blue&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 6&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;Setter&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Property=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;FontFamily&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Value=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;Arial Black&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 7&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;Setter&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Property=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;FontSize&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Value=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;36&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 8&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;/Style&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 9&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;/Page.Resources&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;10&lt;/span&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;11&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;&amp;lt;Button&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;Content=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;My Button Style Example&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;12&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#89b4fa&#34;&gt;Height=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;100&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;13&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#89b4fa&#34;&gt;Style=&lt;/span&gt;&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;{StaticResource MyButtonStyle}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#cba6f7&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;14&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;&amp;lt;!-- 资源的名称是“MyButtonStyle” --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;属性的继承&#34;&gt;属性的继承&lt;/h2&gt;&#xA;&lt;p&gt;使用&lt;code&gt;BasedOn&lt;/code&gt;属性&#xA;如&lt;code&gt;HeaderTextBlockStyle&lt;/code&gt;就是继承自&lt;code&gt;BaseTextBlockStyle&lt;/code&gt;&#xA;原文引用：&lt;/p&gt;</description>
    </item>
    <item>
      <title>LINQ笔记&amp;实例</title>
      <link>https://www.zhhuu.top/posts/linq/</link>
      <pubDate>Sat, 12 Mar 2022 16:29:27 +0000</pubDate>
      <guid>https://www.zhhuu.top/posts/linq/</guid>
      <description>&lt;p&gt;LINQ：语言继承查询&lt;/p&gt;&#xA;&lt;h1 id=&#34;限制运算符-where&#34;&gt;限制运算符 Where&lt;/h1&gt;&#xA;&lt;p&gt;where语句的基本示例&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#f38ba8&#34;&gt;int&lt;/span&gt;[] numbers = {&lt;span style=&#34;color:#fab387&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#fab387&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#fab387&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#fab387&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#fab387&#34;&gt;9&lt;/span&gt;,&lt;span style=&#34;color:#fab387&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#fab387&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#fab387&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#fab387&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#fab387&#34;&gt;0&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;2&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#f38ba8&#34;&gt;var&lt;/span&gt; lowNums = &lt;span style=&#34;color:#cba6f7&#34;&gt;from&lt;/span&gt; num &lt;span style=&#34;color:#cba6f7&#34;&gt;in&lt;/span&gt; numbers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;3&lt;/span&gt;&lt;span&gt;              &lt;span style=&#34;color:#cba6f7&#34;&gt;where&lt;/span&gt; num &amp;lt; &lt;span style=&#34;color:#fab387&#34;&gt;5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;4&lt;/span&gt;&lt;span&gt;              &lt;span style=&#34;color:#cba6f7&#34;&gt;select&lt;/span&gt; num; &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;// 只选择小于5的数字&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;筛选符合属性条件的元素&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#f38ba8&#34;&gt;var&lt;/span&gt; soldOutProducts = &lt;span style=&#34;color:#cba6f7&#34;&gt;from&lt;/span&gt; prod &lt;span style=&#34;color:#cba6f7&#34;&gt;in&lt;/span&gt; products&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;2&lt;/span&gt;&lt;span&gt;                      &lt;span style=&#34;color:#cba6f7&#34;&gt;where&lt;/span&gt; prod.UnitsInStock == &lt;span style=&#34;color:#fab387&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;3&lt;/span&gt;&lt;span&gt;                      &lt;span style=&#34;color:#cba6f7&#34;&gt;select&lt;/span&gt; prod; &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;// 从集合中选出符合属性的元素&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;用多个条件筛选元素&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#f38ba8&#34;&gt;var&lt;/span&gt; expensiveInStockProducts = &lt;span style=&#34;color:#cba6f7&#34;&gt;from&lt;/span&gt; prod &lt;span style=&#34;color:#cba6f7&#34;&gt;in&lt;/span&gt; products&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;2&lt;/span&gt;&lt;span&gt;                               &lt;span style=&#34;color:#cba6f7&#34;&gt;where&lt;/span&gt; prod.UnitsInStock &amp;gt; &lt;span style=&#34;color:#fab387&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; prod.UnitPrice &amp;gt; &lt;span style=&#34;color:#fab387&#34;&gt;3.00&lt;/span&gt;M&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;3&lt;/span&gt;&lt;span&gt;                               &lt;span style=&#34;color:#cba6f7&#34;&gt;select&lt;/span&gt; prod; &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;// 从集合中选出符合上述两个条件的元素&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;基于元素在列表中位置的筛选&lt;/p&gt;</description>
    </item>
    <item>
      <title>FileGetter使用说明</title>
      <link>https://www.zhhuu.top/posts/file-getter-instructions/</link>
      <pubDate>Sun, 29 Apr 2018 19:13:31 +0000</pubDate>
      <guid>https://www.zhhuu.top/posts/file-getter-instructions/</guid>
      <description>&lt;h1 id=&#34;file-getter使用说明&#34;&gt;File Getter使用说明&lt;/h1&gt;&#xA;&lt;h2 id=&#34;功能&#34;&gt;功能&lt;/h2&gt;&#xA;&lt;p&gt;启动后持续扫描电脑上盘符数，当盘符数量有变更时检索新增盘符内文件。当检索到指定文件时复制到电脑中指定目录(C:/got)下。&lt;/p&gt;&#xA;&lt;h2 id=&#34;使用方法&#34;&gt;使用方法&lt;/h2&gt;&#xA;&lt;p&gt;直接打开(建议存入电脑C盘中某个位置再打开)，当你程序成功开始运行后发出短暂(哔)声。当有新盘符插入时，扫描盘符内文件，若有指定类型文件则复制。当扫描完成后程序发出长(1s,哔)声，并自动退出。&lt;/p&gt;&#xA;&lt;h2 id=&#34;使用技巧&#34;&gt;使用技巧&lt;/h2&gt;&#xA;&lt;p&gt;当你在程序运行目录下新建以下文件程序运行逻辑会发生改变:&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;debug.txt&lt;/strong&gt;&#xA;当程序运行时，只要检测到运行目录下有此文件，日志窗口会显示出来。当检测到此文件被删去，窗口则会被隐藏。&#xA;&lt;em&gt;注意:此操作在程序运行时是实时的，命令即刻执行(在下一个循环时)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;keeprunning.txt&lt;/strong&gt;&#xA;当程序完成扫描新磁盘(不管有没有复制)后，若检测到此文件则会继续运行下去。终止程序运行方法参见下文。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;exit.txt&lt;/strong&gt;&#xA;当程序在运行时检测到此文件后则立刻终止运行。&lt;/p&gt;&#xA;&lt;h2 id=&#34;支持的指定类型文件&#34;&gt;支持的指定类型文件&lt;/h2&gt;&#xA;&lt;p&gt;.xls .xlsx&lt;/p&gt;&#xA;&lt;h2 id=&#34;其他说明&#34;&gt;其他说明&lt;/h2&gt;&#xA;&lt;p&gt;本程序仅供学习用途使用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>C#异步介绍</title>
      <link>https://www.zhhuu.top/posts/csharp-async/</link>
      <pubDate>Sun, 08 Apr 2018 21:14:06 +0000</pubDate>
      <guid>https://www.zhhuu.top/posts/csharp-async/</guid>
      <description>&lt;p&gt;创建多线程？太麻烦了！来试试更快更便捷的异步。程序无须按照代码顺序自上而下的执行。&lt;/p&gt;&#xA;&lt;h1 id=&#34;什么是异步编程&#34;&gt;什么是异步编程&lt;/h1&gt;&#xA;&lt;p&gt;什么是异步编程呢？举个简单的例子：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#fab387&#34;&gt;System.Net.Http&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 2&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#fab387&#34;&gt;System.Threading.Tasks&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 3&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#fab387&#34;&gt;static&lt;/span&gt; System.Console;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 4&lt;/span&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 5&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;namespace&lt;/span&gt; &lt;span style=&#34;color:#fab387&#34;&gt;Core&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 6&lt;/span&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 7&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#cba6f7&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#f9e2af&#34;&gt;Async&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 8&lt;/span&gt;&lt;span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 9&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#f38ba8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#cba6f7&#34;&gt;void&lt;/span&gt; Main()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;10&lt;/span&gt;&lt;span&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;11&lt;/span&gt;&lt;span&gt;            Start();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;12&lt;/span&gt;&lt;span&gt;            End();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;13&lt;/span&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;14&lt;/span&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;15&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#f38ba8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#cba6f7&#34;&gt;void&lt;/span&gt; Wait()=&amp;gt;WriteLine(&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;waiting...&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;16&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#f38ba8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#cba6f7&#34;&gt;void&lt;/span&gt; End()=&amp;gt;WriteLine(&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;end...&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;17&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#f38ba8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#f38ba8&#34;&gt;int&lt;/span&gt; Start()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;18&lt;/span&gt;&lt;span&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;19&lt;/span&gt;&lt;span&gt;            WriteLine(&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;start...&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;20&lt;/span&gt;&lt;span&gt;            HttpClient client = &lt;span style=&#34;color:#cba6f7&#34;&gt;new&lt;/span&gt; HttpClient();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;21&lt;/span&gt;&lt;span&gt;            Waiting();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;22&lt;/span&gt;&lt;span&gt;            &lt;span style=&#34;color:#f38ba8&#34;&gt;var&lt;/span&gt; result = client.GetStringAsync(&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;https://www.visualstudio.com/&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;23&lt;/span&gt;&lt;span&gt;            &lt;span style=&#34;color:#f38ba8&#34;&gt;string&lt;/span&gt; str = result.Result;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;24&lt;/span&gt;&lt;span&gt;            &lt;span style=&#34;color:#cba6f7&#34;&gt;return&lt;/span&gt; str.Length;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;25&lt;/span&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;26&lt;/span&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;27&lt;/span&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面这段代码中，Main方法中的代码是按照自上而下的顺序执行的。网络状况不佳时，&lt;strong&gt;Start()&lt;/strong&gt; 方法是比较耗时 &lt;em&gt;（注意，这里在Start方法中调用了异步方法GetStringAsync，但该方法在此处是以同步方式执行的，具体原因下文会进行说明）&lt;/em&gt; ，在 &lt;strong&gt;Start()&lt;/strong&gt; 方法执行完毕之前，整个程序处于阻塞状态。而异步编程可以很好的解决这个问题，&lt;strong&gt;一句简单的话来概括异步编程就是，程序无须按照代码顺序自上而下的执行。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>HCalculator</title>
      <link>https://www.zhhuu.top/posts/hcalculator/</link>
      <pubDate>Mon, 26 Jun 2017 08:51:34 +0000</pubDate>
      <guid>https://www.zhhuu.top/posts/hcalculator/</guid>
      <description>&lt;p&gt;A calculator was written by huuhghhgyg&#xA;[2022-03-02]：该项目已被归档，只是留作纪念。&lt;/p&gt;&#xA;&lt;h1 id=&#34;链接&#34;&gt;链接&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/huuhghhgyg/HCalculator&#34;&gt;View on Github 在Github查看&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/huuhghhgyg/HCalculator/zipball/master&#34;&gt;Download .zip 下载.zip文件&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/huuhghhgyg/HCalculator/tarball/master&#34;&gt;Download .tar.gz 下载.tar.gz文件&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;说明&#34;&gt;说明&lt;/h1&gt;&#xA;&lt;p&gt;若要访问原网页点击&lt;a href=&#34;https://huuhghhgyg.github.io/HCalculator&#34;&gt;&amp;gt;这里&amp;lt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;嗯，就只是一个计算器嘛没什么好看的….要下赶快下XDD&lt;/p&gt;&#xA;&lt;h1 id=&#34;历代大版本更新&#34;&gt;历代大版本更新&lt;/h1&gt;&#xA;&lt;h2 id=&#34;计算器10最初版本&#34;&gt;计算器1.0(最初版本)&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;Calculator1.0.png&#34; alt=&#34;&#34;&gt;&#xA;基本的傻瓜计算器功能，差不多支持键盘乱弹。&lt;/p&gt;&#xA;&lt;h2 id=&#34;计算器20已遗失-作为向material-design的过渡&#34;&gt;计算器2.0(已遗失) 作为向Material Design的过渡&lt;/h2&gt;&#xA;&lt;h2 id=&#34;计算器30&#34;&gt;计算器3.0&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;Calculator3.0.png&#34; alt=&#34;&#34;&gt;&#xA;拥有更好的界面，Material Design设计标准，更多的功能。支持生成随机数，计算日期之间的间隔等新功能。&lt;/p&gt;&#xA;&lt;h2 id=&#34;计算器40当前版本&#34;&gt;计算器4.0(当前版本)&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;Calculator4.0.png&#34; alt=&#34;&#34;&gt;&#xA;新增了科学计算器。改进了科学计算器的界面。持续改进!&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
