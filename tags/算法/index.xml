<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法 on Hikaru&#39;s Blog</title>
    <link>https://www.zhhuu.top/tags/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on Hikaru&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 09 Dec 2024 11:42:28 +0800</lastBuildDate>
    <atom:link href="https://www.zhhuu.top/tags/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>梯度下降</title>
      <link>https://www.zhhuu.top/posts/gradient-descent/</link>
      <pubDate>Mon, 09 Dec 2024 11:42:28 +0800</pubDate>
      <guid>https://www.zhhuu.top/posts/gradient-descent/</guid>
      <description>&lt;h1 id=&#34;梯度下降的过程&#34;&gt;梯度下降的过程&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;挑选一个初始值 $w_0$&lt;/li&gt;&#xA;&lt;li&gt;重复迭代参数 $w_{t+1}=w_t-\eta \frac {\partial L(w_t)}{\partial w_t}$，其中：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$w_t$ 是第 t 次迭代的参数&lt;/li&gt;&#xA;&lt;li&gt;$\eta$ 是学习率&lt;/li&gt;&#xA;&lt;li&gt;$\frac {\partial L(w_t)}{\partial w_t}$ 是损失函数 $L(w)$ 对参数 $w$ 的梯度&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;沿梯度方向将增加损失函数值，因此需要取负梯度方向，即变化量为 $-\eta \frac {\partial L(w_t)}{\partial w_t}$&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;学习率 $\eta$：步长的超参数。&lt;/p&gt;&#xA;&lt;h1 id=&#34;示例&#34;&gt;示例&lt;/h1&gt;&#xA;&lt;h2 id=&#34;优化-x&#34;&gt;优化 x²&lt;/h2&gt;&#xA;&lt;p&gt;💡 以函数求极值的视角来看&lt;/p&gt;&#xA;&lt;p&gt;假设损失函数为 $L(w)=w^2$，则 $\frac {\partial L(w)}{\partial w}=2w$。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;初始值 $w_0=5$&lt;/li&gt;&#xA;&lt;li&gt;学习率 $\eta=0.2$&lt;/li&gt;&#xA;&lt;li&gt;迭代次数 5 次&lt;/li&gt;&#xA;&lt;li&gt;求解 $w_5$&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;这里还默认设置了一个停止条件，即当 $|w_{t+1}-w_t|&amp;lt;0.01$ 时认为已经收敛，停止迭代。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#89b4fa&#34;&gt;gd&lt;/span&gt;(w, lr):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;2&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#cba6f7&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#89dceb&#34;&gt;abs&lt;/span&gt;(w &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;-&lt;/span&gt; lr &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#fab387&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;*&lt;/span&gt; w) &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#fab387&#34;&gt;0.01&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;3&lt;/span&gt;&lt;span&gt;        w &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;=&lt;/span&gt; w &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;-&lt;/span&gt; lr &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#fab387&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;*&lt;/span&gt; w&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;4&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#89dceb&#34;&gt;print&lt;/span&gt;(w)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;5&lt;/span&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;6&lt;/span&gt;&lt;span&gt;gd(&lt;span style=&#34;color:#fab387&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#fab387&#34;&gt;0.2&lt;/span&gt;)  &lt;span style=&#34;color:#6c7086;font-style:italic&#34;&gt;# 初始值 5，学习率 0.2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 1&lt;/span&gt;&lt;span&gt;3.0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 2&lt;/span&gt;&lt;span&gt;1.7999999999999998&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 3&lt;/span&gt;&lt;span&gt;1.0799999999999998&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 4&lt;/span&gt;&lt;span&gt;0.6479999999999999&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 5&lt;/span&gt;&lt;span&gt;0.3887999999999999&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 6&lt;/span&gt;&lt;span&gt;0.23327999999999993&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 7&lt;/span&gt;&lt;span&gt;...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 8&lt;/span&gt;&lt;span&gt;0.0005077997833420796&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 9&lt;/span&gt;&lt;span&gt;0.0003046798700052478&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;10&lt;/span&gt;&lt;span&gt;0.00018280792200314866&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;11&lt;/span&gt;&lt;span&gt;0.0001096847532018892&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;yaxb-拟合&#34;&gt;y=ax+b 拟合&lt;/h2&gt;&#xA;&lt;p&gt;📄&lt;a href=&#34;gd_test.ipynb&#34;&gt;代码附件&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用Python编写遗传算法</title>
      <link>https://www.zhhuu.top/posts/ga/</link>
      <pubDate>Wed, 13 Jul 2022 12:07:30 +0000</pubDate>
      <guid>https://www.zhhuu.top/posts/ga/</guid>
      <description>&lt;p&gt;算法设计，附源码&lt;/p&gt;&#xA;&lt;h1 id=&#34;概述&#34;&gt;概述&lt;/h1&gt;&#xA;&lt;p&gt;当涉及非线性规划问题或者难以在短时间内求得满意解的线性规划问题，可以通过求其近似解（或满意解）而非精确解。使用遗传算法求解近似解所消耗的时间远少于求解精确解，多数时候近似解的效果都可以接受。&#xA;遗传算法的优势体现在：在小规模问题上，遗传算法求解得到的通常是精确解；而在大规模问题上，遗传算法通常可以通过较短的时间求得精确解。&#xA;&lt;img src=&#34;ga1.webp&#34; alt=&#34;ga&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;同样的问题通过遗传算法求解近似解和线性规划求解精确解，遗传算法花费的时间显著短于精确算法。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;算法&lt;/th&gt;&#xA;          &lt;th&gt;时长&lt;/th&gt;&#xA;          &lt;th&gt;结果(此处结果越小越好）&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;遗传算法&lt;/td&gt;&#xA;          &lt;td&gt;123s (2m03s)&lt;/td&gt;&#xA;          &lt;td&gt;371.06&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;精确算法&lt;/td&gt;&#xA;          &lt;td&gt;201s (3m21s)&lt;/td&gt;&#xA;          &lt;td&gt;367.07&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;模型描述&#34;&gt;模型描述&lt;/h1&gt;&#xA;&lt;h2 id=&#34;目标函数&#34;&gt;目标函数&lt;/h2&gt;&#xA;&lt;p&gt;$minf=P\sum_{k=1}^K\sum_{i=1}^N\sum_{j=1}^Nx_{kij}d_{ij}+\frac{P_a}{Q}\sum_{i=1}^N\sum_{j=1}^N(y_{ij}+z_{ij})x_{kij}d_{ij}+P_m\sum_{k=1}^K\sum_{i=1}^N\sum_{j=M}^Nx_{kij}q_j$&lt;/p&gt;&#xA;&lt;h2 id=&#34;约束方程&#34;&gt;约束方程&lt;/h2&gt;&#xA;&lt;div&gt;&#xA;$$&#xA;s.t.\left\{  &#xA;\begin{array}{**lr**}  &#xA;\sum_{k=1}^K\sum_{i=1}^Nx_{kij}=1 &amp; j=2,3,...,N \\  &#xA;\sum_{j=1}^Nx_{kij} = \sum_{j=1}^Nx_{kij} &amp; i=1,2,...,N;k=1,2,...,K \\&#xA;\sum_{j=1}^Nx_{k1j} \le 1 &amp; k=1,2,...,K \\&#xA;y_{ij}+z_{ij} \le Q\sum_{k=1}^Kx_{kij} &amp; i,j=2,3,...,N \\&#xA;\sum_{i=1}^N\sum_{j=1}^Nx_{kij}d_{ij} \leq D &amp; k=1,2,...,K \\&#xA;\sum_{j=1}^Nz_{ij}-\sum_{j=1}^Nz_{ij}=p_i &amp; i=2,3,...,N \\&#xA;\sum_{i=1}^Nx_{kii}=0 &amp; j=1,2,...,N \\&#xA;\sum_{i=2}^N\sum_{j=1}^Nx_{kij} \le V &amp; k=1,2,...,K \\&#xA;y_{ij} \ge 0 ,z_{ij} \ge 0 &amp; i,j=1,2,...,N&#xA;\end{array}  &#xA;\right.&#xA;$$&#xA;&lt;/div&gt;&#xA;&lt;h1 id=&#34;遗传算法设计&#34;&gt;遗传算法设计&lt;/h1&gt;&#xA;&lt;p&gt;经过本次从0开始编写遗传算法求解模型，我将遗传算法划分为几个模块（步骤）&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
