<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>软件开发 on Hikaru&#39;s Blog</title>
    <link>https://www.zhhuu.top/tags/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/</link>
    <description>Recent content in 软件开发 on Hikaru&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 29 Apr 2018 19:13:31 +0000</lastBuildDate>
    <atom:link href="https://www.zhhuu.top/tags/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>FileGetter使用说明</title>
      <link>https://www.zhhuu.top/posts/file-getter-instructions/</link>
      <pubDate>Sun, 29 Apr 2018 19:13:31 +0000</pubDate>
      <guid>https://www.zhhuu.top/posts/file-getter-instructions/</guid>
      <description>&lt;h1 id=&#34;file-getter使用说明&#34;&gt;File Getter使用说明&lt;/h1&gt;&#xA;&lt;h2 id=&#34;功能&#34;&gt;功能&lt;/h2&gt;&#xA;&lt;p&gt;启动后持续扫描电脑上盘符数，当盘符数量有变更时检索新增盘符内文件。当检索到指定文件时复制到电脑中指定目录(C:/got)下。&lt;/p&gt;&#xA;&lt;h2 id=&#34;使用方法&#34;&gt;使用方法&lt;/h2&gt;&#xA;&lt;p&gt;直接打开(建议存入电脑C盘中某个位置再打开)，当你程序成功开始运行后发出短暂(哔)声。当有新盘符插入时，扫描盘符内文件，若有指定类型文件则复制。当扫描完成后程序发出长(1s,哔)声，并自动退出。&lt;/p&gt;&#xA;&lt;h2 id=&#34;使用技巧&#34;&gt;使用技巧&lt;/h2&gt;&#xA;&lt;p&gt;当你在程序运行目录下新建以下文件程序运行逻辑会发生改变:&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;debug.txt&lt;/strong&gt;&#xA;当程序运行时，只要检测到运行目录下有此文件，日志窗口会显示出来。当检测到此文件被删去，窗口则会被隐藏。&#xA;&lt;em&gt;注意:此操作在程序运行时是实时的，命令即刻执行(在下一个循环时)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;keeprunning.txt&lt;/strong&gt;&#xA;当程序完成扫描新磁盘(不管有没有复制)后，若检测到此文件则会继续运行下去。终止程序运行方法参见下文。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;exit.txt&lt;/strong&gt;&#xA;当程序在运行时检测到此文件后则立刻终止运行。&lt;/p&gt;&#xA;&lt;h2 id=&#34;支持的指定类型文件&#34;&gt;支持的指定类型文件&lt;/h2&gt;&#xA;&lt;p&gt;.xls .xlsx&lt;/p&gt;&#xA;&lt;h2 id=&#34;其他说明&#34;&gt;其他说明&lt;/h2&gt;&#xA;&lt;p&gt;本程序仅供学习用途使用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>C#异步介绍</title>
      <link>https://www.zhhuu.top/posts/csharp-async/</link>
      <pubDate>Sun, 08 Apr 2018 21:14:06 +0000</pubDate>
      <guid>https://www.zhhuu.top/posts/csharp-async/</guid>
      <description>&lt;p&gt;创建多线程？太麻烦了！来试试更快更便捷的异步。程序无须按照代码顺序自上而下的执行。&lt;/p&gt;&#xA;&lt;h1 id=&#34;什么是异步编程&#34;&gt;什么是异步编程&lt;/h1&gt;&#xA;&lt;p&gt;什么是异步编程呢？举个简单的例子：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#fab387&#34;&gt;System.Net.Http&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 2&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#fab387&#34;&gt;System.Threading.Tasks&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 3&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#fab387&#34;&gt;static&lt;/span&gt; System.Console;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 4&lt;/span&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 5&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;namespace&lt;/span&gt; &lt;span style=&#34;color:#fab387&#34;&gt;Core&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 6&lt;/span&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 7&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#cba6f7&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#f9e2af&#34;&gt;Async&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 8&lt;/span&gt;&lt;span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt; 9&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#f38ba8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#cba6f7&#34;&gt;void&lt;/span&gt; Main()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;10&lt;/span&gt;&lt;span&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;11&lt;/span&gt;&lt;span&gt;            Start();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;12&lt;/span&gt;&lt;span&gt;            End();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;13&lt;/span&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;14&lt;/span&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;15&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#f38ba8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#cba6f7&#34;&gt;void&lt;/span&gt; Wait()=&amp;gt;WriteLine(&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;waiting...&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;16&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#f38ba8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#cba6f7&#34;&gt;void&lt;/span&gt; End()=&amp;gt;WriteLine(&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;end...&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;17&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#f38ba8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#f38ba8&#34;&gt;int&lt;/span&gt; Start()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;18&lt;/span&gt;&lt;span&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;19&lt;/span&gt;&lt;span&gt;            WriteLine(&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;start...&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;20&lt;/span&gt;&lt;span&gt;            HttpClient client = &lt;span style=&#34;color:#cba6f7&#34;&gt;new&lt;/span&gt; HttpClient();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;21&lt;/span&gt;&lt;span&gt;            Waiting();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;22&lt;/span&gt;&lt;span&gt;            &lt;span style=&#34;color:#f38ba8&#34;&gt;var&lt;/span&gt; result = client.GetStringAsync(&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;https://www.visualstudio.com/&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;23&lt;/span&gt;&lt;span&gt;            &lt;span style=&#34;color:#f38ba8&#34;&gt;string&lt;/span&gt; str = result.Result;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;24&lt;/span&gt;&lt;span&gt;            &lt;span style=&#34;color:#cba6f7&#34;&gt;return&lt;/span&gt; str.Length;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;25&lt;/span&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;26&lt;/span&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;27&lt;/span&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面这段代码中，Main方法中的代码是按照自上而下的顺序执行的。网络状况不佳时，&lt;strong&gt;Start()&lt;/strong&gt; 方法是比较耗时 &lt;em&gt;（注意，这里在Start方法中调用了异步方法GetStringAsync，但该方法在此处是以同步方式执行的，具体原因下文会进行说明）&lt;/em&gt; ，在 &lt;strong&gt;Start()&lt;/strong&gt; 方法执行完毕之前，整个程序处于阻塞状态。而异步编程可以很好的解决这个问题，&lt;strong&gt;一句简单的话来概括异步编程就是，程序无须按照代码顺序自上而下的执行。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>HCalculator</title>
      <link>https://www.zhhuu.top/posts/hcalculator/</link>
      <pubDate>Mon, 26 Jun 2017 08:51:34 +0000</pubDate>
      <guid>https://www.zhhuu.top/posts/hcalculator/</guid>
      <description>&lt;p&gt;A calculator was written by huuhghhgyg&#xA;[2022-03-02]：该项目已被归档，只是留作纪念。&lt;/p&gt;&#xA;&lt;h1 id=&#34;链接&#34;&gt;链接&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/huuhghhgyg/HCalculator&#34;&gt;View on Github 在Github查看&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/huuhghhgyg/HCalculator/zipball/master&#34;&gt;Download .zip 下载.zip文件&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/huuhghhgyg/HCalculator/tarball/master&#34;&gt;Download .tar.gz 下载.tar.gz文件&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;说明&#34;&gt;说明&lt;/h1&gt;&#xA;&lt;p&gt;若要访问原网页点击&lt;a href=&#34;https://huuhghhgyg.github.io/HCalculator&#34;&gt;&amp;gt;这里&amp;lt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;嗯，就只是一个计算器嘛没什么好看的….要下赶快下XDD&lt;/p&gt;&#xA;&lt;h1 id=&#34;历代大版本更新&#34;&gt;历代大版本更新&lt;/h1&gt;&#xA;&lt;h2 id=&#34;计算器10最初版本&#34;&gt;计算器1.0(最初版本)&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;Calculator1.0.png&#34; alt=&#34;&#34;&gt;&#xA;基本的傻瓜计算器功能，差不多支持键盘乱弹。&lt;/p&gt;&#xA;&lt;h2 id=&#34;计算器20已遗失-作为向material-design的过渡&#34;&gt;计算器2.0(已遗失) 作为向Material Design的过渡&lt;/h2&gt;&#xA;&lt;h2 id=&#34;计算器30&#34;&gt;计算器3.0&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;Calculator3.0.png&#34; alt=&#34;&#34;&gt;&#xA;拥有更好的界面，Material Design设计标准，更多的功能。支持生成随机数，计算日期之间的间隔等新功能。&lt;/p&gt;&#xA;&lt;h2 id=&#34;计算器40当前版本&#34;&gt;计算器4.0(当前版本)&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;Calculator4.0.png&#34; alt=&#34;&#34;&gt;&#xA;新增了科学计算器。改进了科学计算器的界面。持续改进!&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
