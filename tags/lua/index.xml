<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lua on Hikaru&#39;s Blog</title>
    <link>https://www.zhhuu.top/tags/lua/</link>
    <description>Recent content in Lua on Hikaru&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 23 Sep 2022 16:20:36 +0000</lastBuildDate>
    <atom:link href="https://www.zhhuu.top/tags/lua/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MicroCity内置的LUA函数</title>
      <link>https://www.zhhuu.top/posts/lua-microcity/</link>
      <pubDate>Fri, 23 Sep 2022 16:20:36 +0000</pubDate>
      <guid>https://www.zhhuu.top/posts/lua-microcity/</guid>
      <description>&lt;p&gt;物流信息管理课程MicroCity学习笔记&lt;/p&gt;&#xA;&lt;h1 id=&#34;lua的小特性集合&#34;&gt;Lua的小特性：集合&lt;/h1&gt;&#xA;&lt;p&gt;虽然Lua里面把它自己的数组称作&lt;code&gt;table&lt;/code&gt;，但是我认为这个数据结构更类似于Python的集合或者json，里面可以存储任何东西，不受结构约束。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;collection &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;=&lt;/span&gt; {{&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#fab387&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#fab387&#34;&gt;2&lt;/span&gt;}, &lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;abc&amp;#34;&lt;/span&gt;, {&lt;span style=&#34;color:#fab387&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#fab387&#34;&gt;3&lt;/span&gt;}}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果需要查询数组的长度，只需要在数组名前面添加&lt;code&gt;#&lt;/code&gt;即可得到&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;list &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#fab387&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#fab387&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#fab387&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#fab387&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#fab387&#34;&gt;5&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;2&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;for&lt;/span&gt; i&lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#fab387&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;#&lt;/span&gt;list &lt;span style=&#34;color:#cba6f7&#34;&gt;do&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;3&lt;/span&gt;&lt;span&gt;    print(list[i])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;4&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#cba6f7&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Lua的数组（集合）下标从&lt;code&gt;1&lt;/code&gt;开始，不同于C类语言的&lt;code&gt;0&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;microcity的内置函数&#34;&gt;MicroCity的内置函数&lt;/h1&gt;&#xA;&lt;p&gt;为什么要写这个？因为MicroCity自带的编辑器相比较于“现代”的编辑器来说还是不够好用（如VSCode等）。我已经遇到了很多同学自己无法解决，找我排除代码中存在的问题。而这些问题98%都是由于语法问题，如缺少关键字（如&lt;code&gt;end&lt;/code&gt;、&lt;code&gt;then&lt;/code&gt;等）。但是我用VSCode，Lua插件一般都会直接给我自动补全。就算有什么问题也会高亮，或者使用快捷键格式化代码的时候也能看出问题。&lt;/p&gt;&#xA;&lt;p&gt;我认为，相比于更加现代的编辑器，MicroCity自带的编辑器“ScriptEditor”由于语法问题的标示不明显、格式化代码功能缺失等使用便利性上的问题，特别是对于Lua语言不熟练的新手，造成代码编写的错误率更高。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;说明：也许其中提到的功能存在于内在编辑器中，但是我反正是没有找到。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;对于我个人来说，VSCode的操作快捷键和各种特性我已经很熟悉，所以我也更倾向于使用VSCode编写Lua语言的脚本。但是对于使用VSCode编写适用于MicroCity运行的Lua脚本（&lt;code&gt;.mcs&lt;/code&gt;）而言，由于MicroCity内置了一些函数，无法在VSCode上高亮显示，因此需要特别整理出来方便日后使用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;常用函数&#34;&gt;常用函数&lt;/h2&gt;&#xA;&lt;p&gt;这里的函数不是全集，只是我用了多少就写多少😂&#xA;全部图形函数及使用方法参见 &lt;a href=&#34;https://github.com/microcity/microcity.github.io/blob/main/docs/4.3_shapes_and_tables.md&#34;&gt;MicroCity文档(英文) 4.3 Shapes And Tables&lt;/a&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;在本页中浏览可以使用右上角的目录列表快速转到对应函数。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;图形&#34;&gt;图形&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;函数&lt;/th&gt;&#xA;          &lt;th&gt;作用&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#Open&#34;&gt;&lt;code&gt;Open&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;打开图形文件，并获取图形文件对象&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#Update&#34;&gt;&lt;code&gt;Update&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;刷新图形&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;open&#34;&gt;Open&lt;/h4&gt;&#xA;&lt;p&gt;&lt;code&gt;Open(&amp;quot;路径&amp;quot;)&lt;/code&gt;，返回图形文件对象。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;countryObject &lt;span style=&#34;color:#89dceb;font-weight:bold&#34;&gt;=&lt;/span&gt; Open(&lt;span style=&#34;color:#a6e3a1&#34;&gt;&amp;#34;countries.shp&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;update&#34;&gt;Update&lt;/h4&gt;&#xA;&lt;p&gt;&lt;code&gt;Update([图形对象])&lt;/code&gt;，刷新图形对象，显示最新的图形。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f849c&#34;&gt;1&lt;/span&gt;&lt;span&gt;Update(countryGRD)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;矢量图&#34;&gt;矢量图&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;函数&lt;/th&gt;&#xA;          &lt;th&gt;作用&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#GetRecCount&#34;&gt;&lt;code&gt;GetRecCount&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;获取图形文件中记录的图形对象个数&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#GetShape&#34;&gt;&lt;code&gt;GetShape&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;从图形文件对象中获取图形对象&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#GetPartCount&#34;&gt;&lt;code&gt;GetPartCount&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;获取对应图形对象分为多少个部分&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#GetPointCount&#34;&gt;&lt;code&gt;GetPointCount&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;获取对应图形对象（部分）有多少个点&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#GetPointXY&#34;&gt;&lt;code&gt;GetPointXY&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;获取图形对象指定部分、指定点编号的XY坐标&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#GetValue&#34;&gt;&lt;code&gt;GetValue&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;获取图形对象的属性值&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#SetValue&#34;&gt;&lt;code&gt;SetValue&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;设置图形对象的属性值&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#GetShapeLen&#34;&gt;&lt;code&gt;GetShapeLen&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;获取图形对象的长度&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#GetDistance&#34;&gt;&lt;code&gt;GetDistance&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;获取坐标点之间的距离&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;getreccount&#34;&gt;GetRecCount&lt;/h4&gt;&#xA;&lt;p&gt;&lt;code&gt;GetRecCount([图形文件对象])&lt;/code&gt;，返回图形文件中记录的图形对象个数。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
